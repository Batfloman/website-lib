{"version":3,"sources":["../ts/dataStructs/TwoKeyMap.ts","../ts/engine/core/GameLoop.ts","../ts/engine/managers/Scene.ts","../ts/engine/core/GameManager.ts","../ts/engine/core/RealTimeManager.ts","../ts/engine/core/TurnBasedManager.ts","../ts/engine/display/Color.ts","../ts/engine/display/Renderer.ts","../ts/math/Matrix.ts","../ts/math/Vector2.ts","../ts/math/math_util.ts","../ts/math/vector_util.ts","../ts/engine/physic/algorithms/Collision.ts","../ts/engine/propertys/ICollideable.ts","../ts/engine/propertys/IRotateable.ts","../ts/engine/propertys/IScaleable.ts","../ts/engine/propertys/ITranslateable.ts","../ts/engine/physic/boundingBox/HitBox.ts","../ts/engine/physic/boundingBox/Circle.ts","../ts/engine/physic/algorithms/SAT.ts","../ts/engine/physic/algorithms/Triangulation.ts","../ts/engine/physic/boundingBox/Polygon2.ts","../ts/engine/physic/boundingBox/Triangle.ts","../ts/engine/physic/boundingBox/Rectangle.ts","../ts/engine/display/camera/Zoom.ts","../ts/engine/display/camera/Camera.ts","../ts/input/Input.ts","../ts/engine/display/htmlCanvas/Canvas.ts","../ts/engine/display/htmlCanvas/CanvasCamera.ts","../ts/engine/display/htmlCanvas/CanvasRenderer.ts","../ts/engine/entities/SceneObject.ts","../ts/engine/entities/GameObject.ts","../ts/engine/entities/ControllableObject.ts","../ts/multiThreading/Thread.ts","../ts/util/object_util.ts","../ts/util/index.ts"],"sourcesContent":["export class TwoKeyMap<K, K2, V> {\n  private map: Map<K, Map<K2, V>>;\n\n  constructor() {\n    this.map = new Map<K, Map<K2, V>>();\n  }\n\n  get(key: K, key2: K2): V | undefined {\n    const firstMapContent = this.map.get(key);\n    const nestedMapContent = firstMapContent?.get(key2);\n    if (!firstMapContent || !nestedMapContent) return;\n\n    return nestedMapContent;\n  }\n\n  set(key: K, key2: K2, value: V): void {\n    const nestedMap = this.map.get(key);\n    if (!nestedMap) this.map.set(key, new Map([[key2, value]]));\n    else nestedMap.set(key2, value);\n  }\n\n  clear(): void {\n    this.map.clear();\n  }\n\n  delete(key: K, key2: K2) {\n    const nestedMap = this.map.get(key);\n    if (!nestedMap) return;\n    else nestedMap.delete(key2);\n  }\n}\n","export class GameLoop {\n\tprivate lastTickTime = Date.now();\n\tprivate isStopped = false;\n\n\tconstructor(private game: { update: (dt: number) => void }) { }\n\n\tstart() {\n\t\tthis.isStopped = false;\n\t\tthis.loop();\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\tprivate loop = () => {\n\t\tconst now = Date.now();\n\t\tconst deltaTime = (now - this.lastTickTime) / 1000; // in Sekunden\n\t\tthis.lastTickTime = now;\n\n\t\tthis.game.update(deltaTime);\n\n\t\tif (!this.isStopped) {\n\t\t\twindow.requestAnimationFrame(this.loop);\n\t\t}\n\t};\n}\n\n","import { Renderer } from \"engine/display\";\nimport { GameObject } from \"../entities/GameObject\";\n\nexport class Scene {\n\tprivate objects: Set<GameObject> = new Set();\n\t// public readonly cameras: \n\t// public readonly camera: Camera;\n\n\taddObject(obj: GameObject) {\n\t\tthis.objects.add(obj);\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const obj of this.objects) obj.update(dt);\n\t}\n\n\trender(renderer: Renderer) {\n\t\tfor (const obj of this.objects) obj.render(renderer);\n\t}\n}\n","import { GameLoop } from '../core/GameLoop';\nimport { Scene } from '../managers/Scene';\n\nexport abstract class GameManager {\n\tpublic readonly gameLoop: GameLoop;\n\tprotected scene: Scene;\n\n\tconstructor() {\n\t\tthis.gameLoop = new GameLoop(this);\n\t\tthis.scene = new Scene();\n\t}\n\n\tabstract update(deltaTime: number): void;\n}\n","import { GameManager } from '../core/GameManager';\n\nexport class RealTimeManager extends GameManager {\n\tupdate(deltaTime: number) {\n\t\tconsole.log(deltaTime);\n\t}\n}\n\n","import { GameManager } from \"./GameManager\";\n\nexport class TurnBasedManager extends GameManager {\n\tupdate(deltaTime: number) {\n\t\tconsole.log(deltaTime);\n\t}\n}\n","import { Util } from \"util\";\n\nexport class Color {\n  static none = new Color(0, 0, 0, 0);\n\n  r: number = 0;\n  g: number = 0;\n  b: number = 0;\n  a: number = 100;\n\n  constructor(r: number, g: number, b: number, a: number = 100) {\n    this.r = r - (1 % 255) + 1;\n    this.g = g - (1 % 255) + 1;\n    this.b = b - (1 % 255) + 1;\n    this.a = a - (1 % 100) + 1;\n  }\n\n  /**\n   * @returns {String} - a String \"rgb(r, g, bm a)\" with r/g/b/a values for rendering\n   */\n  getRGBString(): string {\n    return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a / 100})`;\n  }\n\n  setR(r: number) {\n    this.r = ((r - 1) % 255) + 1;\n  }\n  setG(g: number) {\n    this.g = ((g - 1) % 255) + 1;\n  }\n  setB(b: number) {\n    this.b = ((b - 1) % 255) + 1;\n  }\n  setA(a: number) {\n    this.a = ((a - 1) % 100) + 1;\n  }\n\n  // ==========================================================================================\n  // #region static\n\n  static getRandom() {\n    return new Color(\n      Math.floor(Math.random() * 256),\n      Math.floor(Math.random() * 256),\n      Math.floor(Math.random() * 256)\n    );\n  }\n\n  static getRandomNamedColor() {\n    return Util.array.getRandomItem(Array.from(colors.values()));\n  }\n\n  static get(color: colors): Color {\n    if (!colors.has(color)) {\n      console.warn(`${color} is not declared!`);\n      return Color.none;\n    }\n\n    let c = colors.get(color);\n    if (c == undefined) return Color.none;\n    return c;\n  }\n\n  //#endregion\n}\n\n// colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n\nconst colors = new Map<colors, Color>([\n  [\"aliceblue\", new Color(240, 248, 255)],\n  [\"antiquewhite\", new Color(250, 235, 215)],\n  [\"aqua\", new Color(0, 255, 255)],\n  [\"aquamarine\", new Color(127, 255, 212)],\n  [\"azure\", new Color(240, 255, 255)],\n  [\"beige\", new Color(245, 245, 220)],\n  [\"bisque\", new Color(255, 228, 196)],\n  [\"black\", new Color(0, 0, 0)],\n  [\"blanchedalmond\", new Color(255, 235, 205)],\n  [\"blue\", new Color(0, 0, 255)],\n  [\"blueviolet\", new Color(138, 43, 226)],\n  [\"brown\", new Color(165, 42, 42)],\n  [\"burlywood\", new Color(222, 184, 135)],\n  [\"cadetblue\", new Color(95, 158, 160)],\n  [\"chartreuse\", new Color(127, 255, 0)],\n  [\"chocolate\", new Color(210, 105, 30)],\n  [\"coral\", new Color(255, 127, 80)],\n  [\"cornflowerblue\", new Color(100, 149, 237)],\n  [\"cornsilk\", new Color(255, 248, 220)],\n  [\"crimson\", new Color(220, 20, 60)],\n  [\"cyan\", new Color(0, 255, 255)],\n  [\"darkblue\", new Color(0, 0, 139)],\n  [\"darkcyan\", new Color(0, 139, 139)],\n  [\"darkgoldenrod\", new Color(184, 134, 11)],\n  [\"darkgray\", new Color(169, 169, 169)],\n  [\"darkgreen\", new Color(0, 100, 0)],\n  [\"darkkhaki\", new Color(189, 183, 107)],\n  [\"darkmagenta\", new Color(139, 0, 139)],\n  [\"darkolivegreen\", new Color(85, 107, 47)],\n  [\"darkorange\", new Color(255, 140, 0)],\n  [\"darkorchid\", new Color(153, 50, 204)],\n  [\"darkred\", new Color(139, 0, 0)],\n  [\"darksalmon\", new Color(233, 150, 122)],\n  [\"darkseagreen\", new Color(143, 188, 143)],\n  [\"darkslateblue\", new Color(72, 61, 139)],\n  [\"darkslategray\", new Color(47, 79, 79)],\n  [\"darkturquoise\", new Color(0, 206, 209)],\n  [\"darkviolet\", new Color(148, 0, 211)],\n  [\"deeppink\", new Color(255, 20, 14)],\n  [\"deepskyblue\", new Color(0, 191, 255)],\n  [\"dimgray\", new Color(105, 105, 105)],\n  [\"dodgerblue\", new Color(30, 144, 255)],\n  [\"firebrick\", new Color(178, 34, 34)],\n  [\"floralwhite\", new Color(255, 250, 240)],\n  [\"forestgreen\", new Color(34, 139, 34)],\n  [\"fuchsia\", new Color(255, 0, 255)],\n  [\"gainsboro\", new Color(220, 220, 220)],\n  [\"ghostwhite\", new Color(248, 248, 255)],\n  [\"gold\", new Color(255, 215, 0)],\n  [\"goldenrod\", new Color(218, 165, 32)],\n  [\"gray\", new Color(128, 128, 128)],\n  [\"green\", new Color(0, 128, 0)],\n  [\"greenyellow\", new Color(173, 255, 47)],\n  [\"honeydew\", new Color(240, 255, 240)],\n  [\"hotpink\", new Color(255, 105, 180)],\n  [\"indianred\", new Color(205, 92, 92)],\n  [\"indigo\", new Color(75, 0, 130)],\n  [\"ivory\", new Color(255, 255, 240)],\n  [\"khaki\", new Color(240, 230, 140)],\n  [\"lavender\", new Color(230, 230, 250)],\n  [\"lavenderblush\", new Color(255, 240, 245)],\n  [\"lawngreen\", new Color(124, 252, 0)],\n  [\"lemonchiffon\", new Color(255, 250, 205)],\n  [\"lightblue\", new Color(173, 216, 230)],\n  [\"lightcoral\", new Color(240, 128, 128)],\n  [\"lightcyan\", new Color(224, 255, 255)],\n  [\"lightgoldenrodyellow\", new Color(250, 250, 210)],\n  [\"lightgray\", new Color(211, 211, 211)],\n  [\"lightgreen\", new Color(144, 238, 144)],\n  [\"lightpink\", new Color(255, 182, 193)],\n  [\"lightsalmon\", new Color(255, 160, 122)],\n  [\"lightseagreen\", new Color(32, 178, 170)],\n  [\"lightskyblue\", new Color(135, 206, 250)],\n  [\"lightslategray\", new Color(119, 136, 153)],\n  [\"lightsteelblue\", new Color(176, 196, 222)],\n  [\"lightyellow\", new Color(255, 255, 224)],\n  [\"lime\", new Color(0, 255, 0)],\n  [\"limegreen\", new Color(50, 205, 50)],\n  [\"linen\", new Color(250, 240, 230)],\n  [\"magenta\", new Color(255, 0, 255)],\n  [\"maroon\", new Color(128, 0, 0)],\n  [\"mediumaquamarine\", new Color(102, 205, 170)],\n  [\"mediumblue\", new Color(0, 0, 205)],\n  [\"mediumorchid\", new Color(186, 85, 211)],\n  [\"mediumpurple\", new Color(147, 112, 219)],\n  [\"mediumseagreen\", new Color(60, 179, 113)],\n  [\"mediumslateblue\", new Color(123, 104, 238)],\n  [\"mediumspringgreen\", new Color(0, 250, 154)],\n  [\"mediumturquoise\", new Color(72, 209, 204)],\n  [\"mediumvioletred\", new Color(199, 21, 133)],\n  [\"midnightblue\", new Color(25, 25, 112)],\n  [\"mintcream\", new Color(245, 255, 250)],\n  [\"mistyrose\", new Color(255, 228, 225)],\n  [\"moccasin\", new Color(255, 228, 181)],\n  [\"navajowhite\", new Color(255, 222, 173)],\n  [\"navy\", new Color(0, 0, 128)],\n  [\"oldlace\", new Color(253, 245, 230)],\n  [\"olive\", new Color(128, 128, 0)],\n  [\"olivedrab\", new Color(107, 142, 35)],\n  [\"orange\", new Color(255, 165, 0)],\n  [\"orangered\", new Color(255, 69, 0)],\n  [\"orchid\", new Color(218, 112, 214)],\n  [\"palegoldenrod\", new Color(238, 232, 170)],\n  [\"palegreen\", new Color(152, 251, 152)],\n  [\"paleturquoise\", new Color(175, 238, 238)],\n  [\"palevioletred\", new Color(219, 112, 147)],\n  [\"papayawhip\", new Color(255, 239, 213)],\n  [\"peachpuff\", new Color(255, 218, 185)],\n  [\"peru\", new Color(205, 133, 63)],\n  [\"pink\", new Color(255, 192, 203)],\n  [\"plum\", new Color(221, 160, 221)],\n  [\"powderblue\", new Color(176, 224, 230)],\n  [\"purple\", new Color(128, 0, 128)],\n  [\"red\", new Color(255, 0, 0)],\n  [\"rosybrown\", new Color(188, 143, 143)],\n  [\"royalblue\", new Color(65, 105, 225)],\n  [\"saddlebrown\", new Color(139, 69, 19)],\n  [\"salmon\", new Color(250, 128, 114)],\n  [\"sandybrown\", new Color(244, 164, 96)],\n  [\"seagreen\", new Color(46, 139, 87)],\n  [\"seashell\", new Color(255, 245, 238)],\n  [\"sienna\", new Color(160, 82, 45)],\n  [\"silver\", new Color(192, 192, 192)],\n  [\"skyblue\", new Color(135, 206, 235)],\n  [\"slateblue\", new Color(106, 90, 205)],\n  [\"slategray\", new Color(112, 128, 144)],\n  [\"snow\", new Color(255, 250, 250)],\n  [\"springgreen\", new Color(0, 255, 127)],\n  [\"steelblue\", new Color(70, 130, 180)],\n  [\"tan\", new Color(210, 180, 140)],\n  [\"teal\", new Color(0, 128, 128)],\n  [\"thistle\", new Color(216, 191, 216)],\n  [\"tomato\", new Color(255, 99, 71)],\n  [\"turquoise\", new Color(64, 224, 208)],\n  [\"violet\", new Color(238, 130, 238)],\n  [\"wheat\", new Color(245, 222, 179)],\n  [\"white\", new Color(255, 255, 255)],\n  [\"whitesmoke\", new Color(245, 245, 245)],\n  [\"yellow\", new Color(255, 255, 0)],\n  [\"yellowgreen\", new Color(154, 205, 50)],\n]);\n\ntype colors =\n  | \"aliceblue\"\n  | \"antiquewhite\"\n  | \"aqua\"\n  | \"aquamarine\"\n  | \"azure\"\n  | \"beige\"\n  | \"bisque\"\n  | \"black\"\n  | \"blanchedalmond\"\n  | \"blue\"\n  | \"blueviolet\"\n  | \"brown\"\n  | \"burlywood\"\n  | \"cadetblue\"\n  | \"chartreuse\"\n  | \"chocolate\"\n  | \"coral\"\n  | \"cornflowerblue\"\n  | \"cornsilk\"\n  | \"crimson\"\n  | \"cyan\"\n  | \"darkblue\"\n  | \"darkcyan\"\n  | \"darkgoldenrod\"\n  | \"darkgray\"\n  | \"darkgreen\"\n  | \"darkkhaki\"\n  | \"darkmagenta\"\n  | \"darkolivegreen\"\n  | \"darkorange\"\n  | \"darkorchid\"\n  | \"darkred\"\n  | \"darksalmon\"\n  | \"darkseagreen\"\n  | \"darkslateblue\"\n  | \"darkslategray\"\n  | \"darkturquoise\"\n  | \"darkviolet\"\n  | \"deeppink\"\n  | \"deepskyblue\"\n  | \"dimgray\"\n  | \"dodgerblue\"\n  | \"firebrick\"\n  | \"floralwhite\"\n  | \"forestgreen\"\n  | \"fuchsia\"\n  | \"gainsboro\"\n  | \"ghostwhite\"\n  | \"gold\"\n  | \"goldenrod\"\n  | \"gray\"\n  | \"green\"\n  | \"greenyellow\"\n  | \"honeydew\"\n  | \"hotpink\"\n  | \"indianred\"\n  | \"indigo\"\n  | \"ivory\"\n  | \"khaki\"\n  | \"lavender\"\n  | \"lavenderblush\"\n  | \"lawngreen\"\n  | \"lemonchiffon\"\n  | \"lightblue\"\n  | \"lightcoral\"\n  | \"lightcyan\"\n  | \"lightgoldenrodyellow\"\n  | \"lightgray\"\n  | \"lightgreen\"\n  | \"lightpink\"\n  | \"lightsalmon\"\n  | \"lightseagreen\"\n  | \"lightskyblue\"\n  | \"lightslategray\"\n  | \"lightsteelblue\"\n  | \"lightyellow\"\n  | \"lime\"\n  | \"limegreen\"\n  | \"linen\"\n  | \"magenta\"\n  | \"maroon\"\n  | \"mediumaquamarine\"\n  | \"mediumblue\"\n  | \"mediumorchid\"\n  | \"mediumpurple\"\n  | \"mediumseagreen\"\n  | \"mediumslateblue\"\n  | \"mediumspringgreen\"\n  | \"mediumturquoise\"\n  | \"mediumvioletred\"\n  | \"midnightblue\"\n  | \"mintcream\"\n  | \"mistyrose\"\n  | \"moccasin\"\n  | \"navajowhite\"\n  | \"navy\"\n  | \"oldlace\"\n  | \"olive\"\n  | \"olivedrab\"\n  | \"orange\"\n  | \"orangered\"\n  | \"orchid\"\n  | \"palegoldenrod\"\n  | \"palegreen\"\n  | \"paleturquoise\"\n  | \"palevioletred\"\n  | \"papayawhip\"\n  | \"peachpuff\"\n  | \"peru\"\n  | \"pink\"\n  | \"plum\"\n  | \"powderblue\"\n  | \"purple\"\n  | \"red\"\n  | \"rosybrown\"\n  | \"royalblue\"\n  | \"saddlebrown\"\n  | \"salmon\"\n  | \"sandybrown\"\n  | \"seagreen\"\n  | \"seashell\"\n  | \"sienna\"\n  | \"silver\"\n  | \"skyblue\"\n  | \"slateblue\"\n  | \"slategray\"\n  | \"snow\"\n  | \"springgreen\"\n  | \"steelblue\"\n  | \"tan\"\n  | \"teal\"\n  | \"thistle\"\n  | \"tomato\"\n  | \"turquoise\"\n  | \"violet\"\n  | \"wheat\"\n  | \"white\"\n  | \"whitesmoke\"\n  | \"yellow\"\n  | \"yellowgreen\";\n","import { Vector2 } from \"../../math/Vector2\";\nimport { Color } from \"./Color\";\n\nexport type RenderArgs = {\n\tcolor?: Color,\n\trotation?: number,\n\tfill?: string,\n\tborderStyle?: string,\n}\n\nexport abstract class Renderer {\n\tstatic defaultArgs: RenderArgs = {\n\t\tcolor: Color.get(\"black\"),\n\t\trotation: 0,\n\t}\n\n\tabstract renderLine(pos1: Vector2, pos2: Vector2, args?: RenderArgs): void;\n\tabstract renderCircle(pos: Vector2, radius: number, args?: RenderArgs): void;\n\tabstract renderRectangle(pos: Vector2, pos2: Vector2, args?: RenderArgs): void;\n}\n","import { Util } from \"util\";\n\nexport class Matrix2<T> {\n  private cells: Array<Array<T | string>>;\n\n  private xSize: number;\n  private ySize: number;\n\n  constructor(x: number, y: number) {\n    this.cells = [];\n\n    this.xSize = x;\n    this.ySize = y;\n\n    for (let i = 0; i < y; i++) {\n      let arr = [];\n      for (let j = 0; j < x; j++) {\n        arr.push(\"[]\");\n      }\n      this.cells.push(arr);\n    }\n  }\n\n  isCellEmpty(x: number, y: number): boolean {\n    return this.get(x, y) === \"[]\";\n  }\n\n  clearCell(x: number, y: number): void {\n    this.set(x, y, \"[]\");\n  }\n\n  get(x: number, y: number): T | string {\n    const yIndex = this.ySize - y - 1;\n    const xarr = Util.array.getItemCyclic(this.cells, yIndex);\n    return Util.array.getItemCyclic(xarr, x);\n  }\n\n  set(x: number, y: number, content: string | T): void {\n    if (x < 0 || x >= this.getSizeX()) {\n      console.warn(`${x} is out of Bounds!`);\n      return;\n    }\n    if (y < 0 || y >= this.getSizeY()) {\n      console.warn(`${y} is out of Bounds!`);\n      return;\n    }\n\n    const yIndex = this.ySize - y - 1;\n\n    this.cells[yIndex][x] = content;\n  }\n\n  getSizeX(): number {\n    return this.xSize;\n  }\n\n  getSizeY(): number {\n    return this.ySize;\n  }\n}\n","import { Util } from \"util\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  constructor(x?: number, y?: number) {\n    this.x = !x ? 0 : x;\n    this.y = !y ? 0 : y;\n  }\n\n  add(vec2: Vector2): Vector2 {\n    return new Vector2(this.x + vec2.x, this.y + vec2.y);\n  }\n\n  subtract(vec2: Vector2): Vector2 {\n    return new Vector2(this.x - vec2.x, this.y - vec2.y);\n  }\n\n  scale(scalar: number): Vector2 {\n    return new Vector2(this.x * scalar, this.y * scalar);\n  }\n\n  dotProduct(vec2: Vector2): number {\n    return this.x * vec2.x + this.y * vec2.y;\n  }\n\n  crossProduct(vec2: Vector2): number {\n    return this.x * vec2.y - vec2.x * this.y;\n  }\n\n  vectorTo(point: Vector2): Vector2 {\n    return new Vector2(Math.round(point.x - this.x), Math.round(point.y - this.y));\n  }\n\n  getNormal(): Vector2 {\n    return new Vector2(-this.y, this.x);\n  }\n\n  getMagnitude(): number {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  angle(vec2: Vector2): number {\n    const angleBetween = Util.math.trigonometry.arccos(\n      this.dotProduct(vec2) / (this.getMagnitude() * vec2.getMagnitude())\n    );\n    if (isNaN(angleBetween)) return 0;\n    return vec2.crossProduct(this) >= 0 ? angleBetween : -angleBetween;\n  }\n\n  // ==================================================\n  // static \n\n  static add(vec1: Vector2, vec2: Vector2): Vector2 {\n    return new Vector2(vec1.x + vec2.x, vec1.y + vec2.y);\n  }\n\n  static moveInDirectionFromPoint(start: Vector2, direction: number, distance: number): Vector2 {\n    direction = Util.math.convert.DegToRad(direction)\n    const dx = Math.cos(direction) * distance;\n    const dy = Math.sin(direction) * distance;\n    return new Vector2(start.x + dx, start.y + dy);\n  }\n\n  /** \n   * takes the relative vector between `center` and `vec` and rotates it by angle [radians]\n   * */\n  static rotateAroundCenter(center: Vector2, vec: Vector2, angle: number): Vector2 {\n    let rel = vec.subtract(center);\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n\n    let rotated = new Vector2(\n      rel.x * cos - rel.y * sin,\n      rel.x * sin + rel.y * cos\n    );\n\n    return rotated.add(center);\n  }\n\n  /** \n   * takes the relative vector between `center` and `vec` and sets the rotation to angle [radians]\n   * */\n  static setAngleAroundCenter(center: Vector2, vec: Vector2, angle: number): Vector2 {\n    let rel = vec.subtract(center);\n    let magnitude = rel.getMagnitude();\n\n    let newRel = new Vector2(\n      Math.cos(angle) * magnitude,\n      Math.sin(angle) * magnitude\n    );\n\n    return newRel.add(center);\n  }\n}\n","import { Vector2 } from \"./Vector2\";\n\nexport namespace math {\n  export function round(x: number, num_decimals: number = 0): number {\n    const factor = Math.pow(10, num_decimals);\n    return Math.round(x * factor) / factor;\n  }\n  export function floor(x: number, num_decimals: number = 0): number {\n    const factor = Math.pow(10, num_decimals);\n    return Math.floor(x * factor) / factor;\n  }\n  export function ceil(x: number, num_decimals: number = 0): number {\n    const factor = Math.pow(10, num_decimals);\n    return Math.ceil(x * factor) / factor;\n  }\n\n  export namespace random {\n    export function between(start: number, end: number, num_decimals: number = 0): number {\n      return round(Math.random() * (end - start) + start, num_decimals);\n    }\n    // Vorzeichen\n    export function sign(): number {\n      return Math.random() > 0.5 ? 1 : -1;\n    }\n\n  }\n\n  // uses degree instead of the Math. functions\n  export namespace trigonometry {\n    export function cos(degree: number): number {\n      // Math.cos uses radian not degree\n      return Math.cos(convert.DegToRad(degree));\n    }\n    export function arccos(num: number): number {\n      return convert.RadToDeg(Math.acos(num));\n    }\n  }\n\n  export namespace convert {\n    export function DegToRad(degree: number) {\n      return (degree * Math.PI) / 180;\n    }\n\n    export function RadToDeg(rad: number) {\n      return (180 * rad) / Math.PI;\n    }\n\n    export function percent(percent: number | string, value: number = 1) {\n      if (typeof percent === \"string\") {\n        percent = parseFloat(percent);\n        if (isNaN(percent)) throw new Error(`${percent} contains no number`);\n      }\n\n      return (percent / 100) * value;\n    }\n  }\n}\n","import { Vector2 } from \"./Vector2\";\n\nexport namespace vector {\n  export function distance(vec1: Vector2, vec2: Vector2): number {\n    return vec1.subtract(vec2).getMagnitude();\n  }\n}\n","import { Vector2 } from \"math\";\nimport { Util } from \"util\";\nimport { Circle } from \"../boundingBox/Circle\";\n\nimport { ICollideable } from \"engine/propertys\";\nimport { SAT } from \"./SAT\";\nimport { Triangulation } from \"./Triangulation\";\n\nexport namespace Collision {\n  export function testCollision(obj1: ICollideable, obj2: ICollideable): boolean {\n    [obj1, obj2].forEach((obj) => obj.collider.translatePoints());\n\n    if (obj1.hitBox instanceof Circle || obj2.hitBox instanceof Circle) {\n      return potentialCollision(obj1, obj2);\n    }\n\n    if (!potentialCollision(obj1, obj2)) return false;\n\n    if (!obj1.hitBox.isConvex) {\n      const parts = Triangulation.triangulate(obj1);\n      for (let part of parts) {\n        if (Collision.testCollision(part, obj2)) return true;\n      }\n      return false;\n    }\n    if (!obj2.hitBox.isConvex) {\n      const parts = Triangulation.triangulate(obj2);\n      for (let part of parts) {\n        if (Collision.testCollision(obj1, part)) return true;\n      }\n      return false;\n    }\n\n    return SAT.testCollision(obj1, obj2);\n  }\n\n  export function isPointInside(obj: ICollideable, worldPoint: Vector2): boolean {\n    // transform in koordinates relative to the hitbox \n    const localPoint = Vector2.setAngleAroundCenter(obj.pos, worldPoint, -obj.orientation);\n    return obj.hitBox.isPointInside(localPoint);\n  }\n\n  export function potentialCollision(obj1: ICollideable, obj2: ICollideable): boolean {\n    return circleCollision(\n      obj1.pos,\n      obj1.hitBox.boundingRadius,\n      obj2.pos,\n      obj2.hitBox.boundingRadius\n    );\n  }\n\n  export function circleCollision(c1: Vector2, r1: number, c2: Vector2, r2: number): boolean {\n    return Util.vector.distance(c1, c2) < r1 + r2;\n  }\n}\n","import { Vector2 } from \"../../math/Vector2\";\nimport { Collision, HitBox } from \"engine/physic\";\nimport { IMoveable } from \"./IMoveable\";\n\nexport interface ICollideable<Box extends HitBox = HitBox> extends IMoveable {\n  hitBox: Box;\n\n  collider: CollideableBehaviour;\n}\n\nexport class CollideableBehaviour {\n  translatedPoints: Vector2[] = [];\n  alreadyTranslated: boolean = false;\n\n  constructor(private host: ICollideable) { };\n\n  isCollidingWith(other: ICollideable): boolean {\n    return Collision.testCollision(this.host, other);\n  }\n\n  translatePoints(): Vector2[] {\n    return this.host.hitBox.translatePoints(this.host.pos, this.host.orientation)\n  }\n}\n","export interface IRotateable {\n\torientation: number;\n\n\trotator: RotateBehaviour;\n}\n\nexport class RotateBehaviour {\n\tconstructor(private host: IRotateable) { };\n\n\trotate(degrees: number): void {\n\t\tthis.host.orientation += degrees;\n\t\tthis.host.orientation %= 360;\n\t}\n\n\tsetRotation(degrees: number) {\n\t\tthis.host.orientation = (degrees % 360);\n\t}\n}\n","export interface IScaleable {\n\tscale: number;\n\n\tscaler: ScaleBehavior;\n}\n\nexport class ScaleBehavior {\n\tconstructor(private host: { scale: number }) { }\n\n\tscale(scalar: number) {\n\t\tthis.host.scale *= scalar;\n\t}\n\n\tsetScale(scale: number) {\n\t\tthis.host.scale = scale;\n\t}\n}\n","import { Vector2 } from \"math\";\n\nexport interface ITranslateable {\n\tpos: Vector2;\n\tmover: TranslationBehavior;\n}\n\nexport class TranslationBehavior {\n\n\tconstructor(private host: { pos: Vector2 }) { }\n\n\tmoveDirection(degrees: number, distance: number): void {\n\t\tconst radians = (degrees * Math.PI) / 180;\n\t\tconst dx = Math.cos(radians) * distance;\n\t\tconst dy = Math.sin(radians) * distance;\n\t\tthis.move(new Vector2(dx, dy));\n\t}\n\n\tmove(vec: Vector2): void {\n\t\tthis.host.pos.x += vec.x;\n\t\tthis.host.pos.y += vec.y;\n\t}\n}\n","import { IScaleable, ScaleBehavior } from \"engine/propertys\";\nimport { Vector2 } from \"math\";\n\nexport abstract class HitBox implements IScaleable {\n  // quick access vars (need to set at initialization)\n  public boundingRadius!: number;\n  public isConvex!: boolean;\n  public scale: number = 1;\n  public scaler: ScaleBehavior = new ScaleBehavior(this);\n\n  // returns points for a given position and orientation\n  abstract translatePoints(pos: Vector2, orientation: number): Vector2[];\n\n  abstract isPointInside(point: Vector2): boolean;\n}\n","import { HitBox } from \"./HitBox\";\nimport { Vector2 } from \"math\";\n\nexport class Circle extends HitBox {\n  radius: number;\n  // quick access vars (need to set at initialization)\n  public readonly boundingRadius: number;\n  public readonly isConvex: boolean;\n\n  constructor(radius: number = 1) {\n    super();\n    this.radius = radius;\n    this.isConvex = true;\n    this.boundingRadius = radius;\n  }\n\n  // ==================================================\n  // super class\n\n  translatePoints(pos: Vector2, orientation: number): Vector2[] {\n    return [\n      Vector2.moveInDirectionFromPoint(pos, orientation, this.radius),\n      Vector2.moveInDirectionFromPoint(pos, 360 - orientation, this.radius),\n    ]\n  }\n\n  isPointInside(point: Vector2): boolean {\n    return point.getMagnitude() <= this.radius;\n  }\n}\n\n\n","import { Circle } from \"../boundingBox/Circle\";\nimport { ICollideable } from \"engine/propertys\";\n\n// Separating Axis Theorem\nexport class SAT {\n  static testCollision(obj1: ICollideable, obj2: ICollideable): boolean {\n    if (obj1.hitBox instanceof Circle || obj2.hitBox instanceof Circle) return true;\n    return this.areColliding(obj1, obj2) && this.areColliding(obj2, obj1);\n  }\n\n  /**\n   * Tests all Sides of polygon 1 with SAT agaings polygon 2\n   * Returns false if a gap is found - else true\n   */\n  private static areColliding(polygon1: ICollideable, polygon2: ICollideable) {\n    const points1 = polygon1.collider.translatePoints();\n    const points2 = polygon2.collider.translatePoints();\n\n    let lastPoint = points1[points1.length - 1];\n\n    for (let i = 0; i < points1.length; i++) {\n      const point = points1[i];\n\n      const normal = lastPoint.vectorTo(point).getNormal();\n      // projection shape 1\n\n      let min1 = Infinity;\n      let max1 = -Infinity;\n\n      points1.forEach((point) => {\n        const dot = point.dotProduct(normal) / normal.getMagnitude();\n        min1 = Math.min(min1, dot);\n        max1 = Math.max(max1, dot);\n      });\n\n      // projection shape 2\n\n      let min2 = Infinity;\n      let max2 = -Infinity;\n\n      points2.forEach((point) => {\n        const dot = point.dotProduct(normal) / normal.getMagnitude();\n        min2 = Math.min(min2, dot);\n        max2 = Math.max(max2, dot);\n      });\n\n      if (!(max2 >= min1 && max1 >= min2)) return false;\n\n      lastPoint = point;\n    }\n    return true;\n  }\n}\n","import { Util } from \"util\";\nimport { Vector2 } from \"math\";\nimport { CollideableBehaviour, ICollideable, RotateBehaviour } from \"engine/propertys\";\nimport { TranslationBehavior } from \"engine/propertys/ITranslateable\";\nimport { Polygon2 } from \"../boundingBox/Polygon2\";\nimport { Triangle } from \"../boundingBox/Triangle\";\n\nexport class Triangulation {\n  static triangulate(obj: ICollideable): ICollideable[] {\n    if (!(obj.hitBox instanceof Polygon2))\n      throw new Error(\"other than polygon not implemented yet!\");\n\n    const vertices = obj.hitBox.model;\n    const windung = Polygon2.findWinding(obj.hitBox);\n\n    const ears: Ear[] = [];\n\n    const indexList: number[] = [];\n    for (let i = 0; i < vertices.length; i++) {\n      indexList.push(i);\n    }\n\n    while (indexList.length > 3) {\n      for (let i = 0; i < indexList.length; i++) {\n        const i1 = Util.array.getItemCyclic(indexList, i - 1);\n        const i2 = indexList[i]\n        const i3 = Util.array.getItemCyclic(indexList, i + 1);\n\n        const va = vertices[i1];\n        const vb = vertices[i2];\n        const vc = vertices[i3];\n\n        const vb_to_va = va.subtract(vb);\n        const vb_to_vc = vc.subtract(vb);\n\n        // Is ear test vertex convex?\n        if (!Polygon2.isConvex(windung, vb_to_va.crossProduct(vb_to_vc))) continue;\n\n        let isEar = true;\n\n        // Does test ear contain any polygon vertecies?\n        for (let j = 0; j < vertices.length; j++) {\n          if (j == i1 || j == i2 || j == i3) continue;\n\n          let p = vertices[j];\n\n          if (Triangulation.isPointInTriangle(p, vb, va, vc)) {\n            isEar = false;\n            break;\n          }\n        }\n\n        if (!isEar) continue;\n\n        const ear = new Ear(obj.pos, new Triangle(va, vb, vc), obj.orientation)\n        ears.push(ear);\n\n        Util.array.removeItemAtIndex(indexList, i);\n        break;\n      }\n    }\n\n    const last_triangle = new Triangle(vertices[indexList[0]], vertices[indexList[1]], vertices[indexList[2]]);\n    const last_ear = new Ear(obj.pos, last_triangle, obj.orientation)\n    ears.push(last_ear)\n\n    return ears;\n  }\n\n  private static isPointInTriangle(p: Vector2, a: Vector2, b: Vector2, c: Vector2): boolean {\n    const ab = b.subtract(a);\n    const bc = c.subtract(b);\n    const ca = a.subtract(c);\n\n    const ap = p.subtract(a);\n    const bp = p.subtract(b);\n    const cp = p.subtract(c);\n\n    const cross1 = ab.crossProduct(ap);\n    const cross2 = bc.crossProduct(bp);\n    const cross3 = ca.crossProduct(cp);\n\n    if (cross1 < 0 || cross2 < 0 || cross3 < 0) return false;\n    return true;\n  }\n}\n\nclass Ear implements ICollideable {\n  pos: Vector2;\n  mover: TranslationBehavior = new TranslationBehavior(this);\n  collider: CollideableBehaviour = new CollideableBehaviour(this);\n  rotator: RotateBehaviour = new RotateBehaviour(this);\n  hitBox: Triangle;\n  orientation: number;\n\n  constructor(pos: Vector2, hitBox: Triangle, orientation: number = 0) {\n    this.pos = pos;\n    this.hitBox = hitBox;\n    this.orientation = orientation\n  }\n\n  translatedPoints: Vector2[] = [];\n  alreadyTranslated: boolean = false;\n\n  translatePoints(): Vector2[] {\n    if (this.alreadyTranslated) return this.translatedPoints;\n\n    this.translatedPoints = this.hitBox.translatePoints(this.pos, this.orientation);\n    this.alreadyTranslated = true\n    return this.translatedPoints;\n  }\n}\n","import { Vector2 } from \"math\";\nimport { Util } from \"util\";\nimport { HitBox } from \"./HitBox\";\n\nexport type PolygonWinding = \"clockwise\" | \"counterclockwise\";\n\nexport class Polygon2 extends HitBox {\n  // points relative to a (0|0) center with 0° rotation\n  public model: Vector2[] = new Array();\n  // quick access vars (need to set at initialization)\n  public boundingRadius: number;\n  public isConvex: boolean;\n\n  constructor(model: Vector2[]) {\n    super();\n\n    this.model = model;\n    this.boundingRadius = this.updateBoundingRadius();\n    this.isConvex = Polygon2.testConvex(this);\n  }\n\n  private updateBoundingRadius() {\n    let point_distances = this.model.map(p => p.getMagnitude());\n    this.boundingRadius = Math.max(...point_distances);\n    return this.boundingRadius;\n  }\n\n  private findCenter(): Vector2 {\n    let center = new Vector2();\n\n    for (let point of this.model) {\n      center = center.add(point);\n    }\n\n    return center.scale(1 / this.model.length);\n  }\n\n  /**\n   * offsets all Points to match the focus point\n   */\n  centerModel(): void {\n    // offset from current center\n    const realCenter = this.findCenter();\n\n    // move points\n    this.model.forEach((point) => {\n      point.x -= realCenter.x;\n      point.y -= realCenter.y;\n    });\n\n    // update boundingRadius\n    this.updateBoundingRadius()\n  }\n\n  // ==========================================================================================\n  // from Super classes\n\n  translatePoints(pos: Vector2, orientation: number): Vector2[] {\n    return this.model.map(p => Vector2.setAngleAroundCenter(pos, p.add(pos), orientation));\n  }\n\n  isPointInside(point: Vector2): boolean {\n    return Polygon2.isPointIndside(this, point);\n  }\n\n  // ==================================================\n  // static\n\n  static findArea(polygon: Polygon2): number {\n    let area = 0;\n    for (let i = 0; i < polygon.model.length; i++) {\n      const a = polygon.model[i];\n      const b = Util.array.getItemCyclic(polygon.model, i + 1);\n\n      area += a.x * b.y;\n      area -= a.y * b.x;\n    }\n\n    return area / 2;\n  }\n\n  static findWinding(polygon: Polygon2): PolygonWinding {\n    return Polygon2.findArea(polygon) < 0 ? \"clockwise\" : \"counterclockwise\";\n  }\n\n  static testConvex(polygon: Polygon2): boolean {\n    if (polygon.model.length <= 3) return true;\n\n    const winding = Polygon2.findWinding(polygon);\n\n    for (let i = 0; i < polygon.model.length; i++) {\n      const a = Util.array.getItemCyclic(polygon.model, i - 1);\n      const b = polygon.model[i]\n      const c = Util.array.getItemCyclic(polygon.model, i + 1);\n\n      const ba = a.subtract(b);\n      const bc = c.subtract(b);\n\n      if (!Polygon2.isConvex(winding, ba.crossProduct(bc))) return false;\n    }\n    return true;\n  }\n\n  static isConvex(windung: PolygonWinding, crossProduct: number) {\n    if (windung == \"clockwise\" && crossProduct >= 0) return true;\n    if (windung == \"counterclockwise\" && crossProduct <= 0) return true;\n    return false;\n  }\n\n  /**\n  *  Uses local koords to check if a point is \"inside\"\n  */\n  static isPointIndside(polygon: Polygon2, point: Vector2) {\n    const winding = Polygon2.findWinding(polygon);\n\n    for (let i = 0; i < polygon.model.length; i++) {\n      const a = polygon.model[i];\n      // ensure index `-1` and `n+1` are handled\n      const b = Util.array.getItemCyclic(polygon.model, i - 1);\n\n      const a_to_b = b.subtract(a);\n      const a_to_p = point.subtract(a);\n\n      const cross = a_to_b.crossProduct(a_to_p);\n\n      if (!Polygon2.isConvex(winding, cross))\n        return false;\n    }\n    return true;\n  }\n}\n","import { Vector2 } from \"math\";\nimport { Polygon2 } from \"../boundingBox/Polygon2\";\n\n// simple ICollideable Object to store;\nexport class Triangle extends Polygon2 {\n  constructor(p1: Vector2, p2: Vector2, p3: Vector2) {\n    let model = [\n      p1, p2, p3\n    ]\n    super(model);\n\n    this.centerModel();\n  }\n}\n","import { Vector2 } from \"math/Vector2.js\";\nimport { Polygon2 } from \"./Polygon2.js\";\n\nexport class Rectangle extends Polygon2 {\n  width: number;\n  height: number;\n\n  constructor(width: number, height: number) {\n    super([ // model\n      new Vector2(0, 0),\n      new Vector2(0, height),\n      new Vector2(width, height),\n      new Vector2(width, 0),\n    ]);\n    this.centerModel(); // ensure model is centered\n\n    this.width = width;\n    this.height = height;\n  }\n}\n","export class Zoom {\n\tactivated: boolean = true;\n\tfaktor: number;\n\tminZoom: number;\n\tmaxZoom: number;\n\tcurrentZoom: number;\n\n\tconstructor(faktor: number = 1.15, minZoom: number = 0.5, maxZoom: number = 3) {\n\t\tthis.faktor = faktor;\n\t\tthis.minZoom = minZoom;\n\t\tthis.maxZoom = maxZoom;\n\t\tthis.currentZoom = 1;\n\t}\n\n\tzoomIn(): number | null {\n\t\tif (!this.activated) return null;\n\n\t\tconst nextZoom = this.currentZoom / this.faktor;\n\t\tif (nextZoom < this.minZoom) return null;\n\n\t\tthis.currentZoom = nextZoom;\n\t\treturn this.currentZoom;\n\t}\n\n\tzoomOut(): number | null {\n\t\tif (!this.activated) return null;\n\n\t\tconst nextZoom = this.currentZoom * this.faktor;\n\t\tif (nextZoom > this.maxZoom) return null;\n\n\t\tthis.currentZoom = nextZoom;\n\t\treturn this.currentZoom;\n\t}\n\n\tsetZoom(zoom: number = 1) {\n\t\tthis.currentZoom = zoom;\n\t}\n\n\tsetActivated(value: boolean) {\n\t\tthis.activated = value;\n\t}\n\n\tenable() {\n\t\tthis.activated = true;\n\t}\n\tdisable() {\n\t\tthis.activated = false;\n\t}\n}\n\n","import { Collision, HitBox, Rectangle } from \"engine/physic\";\nimport { CollideableBehaviour, ICollideable, IMoveable, RotateBehaviour, TranslationBehavior } from \"engine/propertys\";\nimport { Vector2 } from \"math\";\nimport { Util } from \"util\";\nimport { Zoom } from \"./Zoom\";\n\nexport class Camera implements ICollideable<HitBox>, IMoveable {\n\tpos: Vector2 = new Vector2();\n\thitBox: Rectangle;\n\torientation: number = 0;\n\tcollider: CollideableBehaviour = new CollideableBehaviour(this);\n\tmover: TranslationBehavior = new TranslationBehavior(this);\n\trotator: RotateBehaviour = new RotateBehaviour(this);\n\n\tlockMovement: boolean = false;\n\n\tprotected zoom = new Zoom()\n\n\tconstructor(width: number, height: number) {\n\t\tthis.hitBox = new Rectangle(width, height);\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.orientation += degrees;\n\t\tthis.orientation %= 360;\n\n\t\tthis.alreadyTranslated = false;\n\t}\n\n\ttranslatedPoints: Vector2[] = [];\n\talreadyTranslated: boolean = false;\n\n\ttranslatePoints(): Vector2[] {\n\t\tif (this.alreadyTranslated) return this.translatedPoints;\n\n\t\tthis.hitBox.scaler.setScale(1 / this.zoom.currentZoom);\n\t\tthis.translatedPoints = this.hitBox.translatePoints(this.pos, this.orientation);\n\t\tthis.alreadyTranslated = true\n\t\treturn this.translatedPoints;\n\t}\n\n\tisCollidingWith(other: ICollideable): boolean {\n\t\treturn Collision.testCollision(this, other);\n\t}\n}\n","import { Util } from \"util\";\nimport { Vector2 } from \"math\";\nimport { inputKey } from \"./inputKeys\";\n\nconst keys: Map<string, inputKey> = new Map([\n  [\"a\", \"a\"],\n  [\"b\", \"b\"],\n  [\"c\", \"c\"],\n  [\"d\", \"d\"],\n  [\"e\", \"e\"],\n  [\"f\", \"f\"],\n  [\"g\", \"g\"],\n  [\"h\", \"h\"],\n  [\"i\", \"i\"],\n  [\"j\", \"j\"],\n  [\"k\", \"k\"],\n  [\"l\", \"l\"],\n  [\"m\", \"m\"],\n  [\"n\", \"n\"],\n  [\"o\", \"o\"],\n  [\"p\", \"p\"],\n  [\"q\", \"q\"],\n  [\"r\", \"r\"],\n  [\"s\", \"s\"],\n  [\"t\", \"t\"],\n  [\"u\", \"u\"],\n  [\"v\", \"v\"],\n  [\"w\", \"w\"],\n  [\"x\", \"x\"],\n  [\"y\", \"y\"],\n  [\"z\", \"z\"],\n  [\"0\", \"0\"],\n  [\"1\", \"1\"],\n  [\"2\", \"2\"],\n  [\"3\", \"3\"],\n  [\"4\", \"4\"],\n  [\"5\", \"5\"],\n  [\"6\", \"6\"],\n  [\"7\", \"7\"],\n  [\"8\", \"8\"],\n  [\"9\", \"9\"],\n  [\"mouse0\", \"leftclick\"],\n  [\"mouse2\", \"rightclick\"],\n  [\"mouse1\", \"middleclick\"],\n  [\"tab\", \"tab\"],\n  [\"shift\", \"shift\"],\n  [\" \", \"space\"],\n  [\"control\", \"strg\"],\n  [\"altgraph\", \"altRight\"],\n  [\"alt\", \"alt\"],\n  [\"arrowleft\", \"left\"],\n  [\"arrowright\", \"right\"],\n  [\"arrowup\", \"up\"],\n  [\"arrowdown\", \"down\"],\n]);\n\nexport class Input {\n  static eventListener: Map<string, Listener[]> = new Map();\n\n  static pressedKeys: inputKey[] = new Array();\n\n  static mPos = new Vector2();\n\n  /** updates the most important changes for easier access */\n  static staticConstructor() {\n    // Mouse\n    window.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      Input.keyDown(Input.getInputKey(\"mouse\" + event.button));\n      Input.mPos.x = event.offsetX;\n      Input.mPos.y = event.offsetY;\n    });\n    window.addEventListener(\"mouseup\", (event: MouseEvent) => {\n      Input.keyUp(Input.getInputKey(\"mouse\" + event.button));\n    });\n    window.addEventListener(\"mousemove\", (event: MouseEvent) => {\n      Input.mPos.x = event.offsetX;\n      Input.mPos.y = event.offsetY;\n    });\n\n    // Keys\n    window.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n      Input.keyDown(Input.getInputKey(event.key));\n    });\n    window.addEventListener(\"keyup\", (event: KeyboardEvent) => {\n      Input.keyUp(Input.getInputKey(event.key));\n    });\n\n    // Window changes\n    window.addEventListener(\"blur\", () => {\n      this.pressedKeys = new Array();\n    });\n  }\n\n  static newEventListener<K extends keyof WindowEventMap>(event: K, obj: Object, func: Function) {\n    if (!Input.eventListener.has(event)) window.addEventListener(event, Input.notifyOfEvent);\n\n    let listener = Input.eventListener.get(event);\n    if (!listener) listener = new Array();\n\n    listener.push(new Listener(obj, func));\n    Input.eventListener.set(event, listener);\n  }\n\n  static removeEventListener<K extends keyof WindowEventMap>(event: K, obj: Object) {\n    const listener = Input.eventListener.get(event);\n    if (!listener) return;\n\n    for (let lis of listener) {\n      if (lis.obj == obj) Util.array.removeItem(listener, lis);\n    }\n  }\n\n  private static notifyOfEvent(event: Event) {\n    let listener = Input.eventListener.get(event.type);\n    if (!listener) return;\n\n    if (event instanceof MouseEvent) Input.mPos = new Vector2(event.offsetX, event.offsetY);\n\n    listener.forEach((listener) => {\n      listener.func.call(listener.obj, event);\n    });\n  }\n\n  private static keyDown(key: inputKey | undefined) {\n    if (!key) return;\n\n    if (!this.pressedKeys.includes(key)) {\n      this.pressedKeys.push(key);\n    }\n  }\n\n  private static keyUp(key: inputKey | undefined) {\n    if (!key) return;\n\n    if (this.pressedKeys.includes(key)) {\n      Util.array.removeItem(this.pressedKeys, key);\n    }\n  }\n\n  static getInputKey(key: string): inputKey | undefined {\n    key = key.toLowerCase();\n    if (!keys.has(key)) console.warn(key + \" has no InputKey!\");\n    return keys.get(key);\n  }\n\n  static isLeftClick(): boolean {\n    return Input.pressedKeys.includes(\"leftclick\");\n  }\n\n  static isPressed(key: inputKey): boolean {\n    return Input.pressedKeys.includes(key);\n  }\n}\n\nclass Listener {\n  obj: Object;\n  func: Function;\n\n  constructor(obj: Object, func: Function) {\n    this.obj = obj;\n    this.func = func;\n  }\n}\n\n// call static Constructor\nInput.staticConstructor();\n\n// ===================\n\n\nconst input = {\n  listener: new Map(),\n\n  pressedKey: [],\n\n  mPos: new Vector2(),\n}\n","import { Input } from \"input/Input\";\n\nexport class Canvas {\n\tprivate htmlCanvas: HTMLCanvasElement;\n\n\tpublic width: number = 0;\n\tpublic height: number = 0;\n\n\tconstructor(htmlCanvas: HTMLCanvasElement | null) {\n\t\tthis.htmlCanvas = htmlCanvas ?? document.createElement(\"canvas\");\n\n\t\tInput.newEventListener(\"resize\", this, this.updateSize);\n\t\tthis.updateSize();\n\t}\n\n\tupdateSize() {\n\t\tthis.htmlCanvas.width = this.htmlCanvas.getBoundingClientRect().width;\n\t\tthis.htmlCanvas.height = this.htmlCanvas.getBoundingClientRect().height;\n\n\t\tthis.width = this.htmlCanvas.getBoundingClientRect().width;\n\t\tthis.height = this.htmlCanvas.getBoundingClientRect().height;\n\t}\n}\n","import { Rectangle } from \"engine/physic\";\nimport { Vector2 } from \"math\";\nimport { Camera } from \"../camera/Camera\";\nimport { Canvas } from \"./Canvas\";\nimport { Input } from \"input\";\n\nexport class CanvasCamera extends Camera {\n\tconstructor(canvas: Canvas) {\n\t\tsuper(canvas.width, canvas.height);\n\n\t\tInput.newEventListener(\"wheel\", this, this.mouseWheel)\n\t\tInput.newEventListener(\"mousemove\", this, this.mouseMove);\n\n\t\tInput.newEventListener(\"touchmove\", this, this.touchMove);\n\t\tInput.newEventListener(\"touchend\", this, () => (this.previousTouchPos = undefined));\n\t\tInput.newEventListener(\"touchcancel\", this, () => (this.previousTouchPos = undefined));\n\n\t\tInput.newEventListener(\"resize\", this, () => {\n\t\t\tcanvas.updateSize()\n\t\t\tthis.hitBox = new Rectangle(canvas.width, canvas.height)\n\t\t\tthis.alreadyTranslated = false;\n\t\t});\n\t}\n\n\t// ==================================================\n\t// eventhandlers\n\n\tprivate mouseWheel(event: WheelEvent): void {\n\t\tif (!this.zoom.activated) return;\n\n\t\tif (event.deltaY < 0) {\n\t\t\tthis.zoom.zoomIn();\n\t\t} else if (event.deltaY > 0) {\n\t\t\tthis.zoom.zoomOut();\n\t\t}\n\n\t\tthis.alreadyTranslated = false;\n\t}\n\n\tprivate mouseMove(event: MouseEvent): void {\n\t\tif (this.lockMovement) return;\n\n\t\tif (!Input.isLeftClick()) return;\n\n\t\tthis.pos.x -= event.movementX / this.zoom.currentZoom;\n\t\tthis.pos.y += event.movementY / this.zoom.currentZoom;\n\n\t\tthis.alreadyTranslated = false;\n\t}\n\n\tprivate previousTouchPos: Vector2 | undefined;\n\tprivate touchMove(event: TouchEvent): void {\n\t\tif (this.lockMovement) return;\n\n\t\tconst touch = event.touches[0] || event.changedTouches[0];\n\t\tconst touchPos = new Vector2(touch.clientX, touch.clientY);\n\n\t\tif (!this.previousTouchPos) {\n\t\t\tthis.previousTouchPos = touchPos;\n\t\t\treturn;\n\t\t}\n\n\t\tconst move = touchPos.subtract(this.previousTouchPos);\n\t\tthis.previousTouchPos = touchPos;\n\n\t\tthis.pos.x -= move.x / this.zoom.currentZoom;\n\t\tthis.pos.y += move.y / this.zoom.currentZoom;\n\n\t\tthis.alreadyTranslated = false;\n\t}\n\n}\n","import { Vector2 } from \"math\";\nimport { Color } from \"../Color\";\nimport { Renderer, RenderArgs } from \"../Renderer\";\n\nexport class CanvasRenderer extends Renderer {\n\tprotected canvas: HTMLCanvasElement;\n\n\tconstructor(canvas: HTMLCanvasElement) {\n\t\tsuper();\n\n\t\tthis.canvas = canvas;\n\t}\n\n\trenderLine(pos1: Vector2, pos2: Vector2, args?: RenderArgs): void {\n\n\t}\n\n\trenderCircle(pos: Vector2, radius: number, args?: RenderArgs): void {\n\n\t}\n\n\trenderRectangle(pos: Vector2, pos2: Vector2, args?: RenderArgs): void {\n\n\t}\n}\n","import { IUpdateable } from \"engine/propertys/IUpdateable\";\n\nexport abstract class SceneObject implements IUpdateable {\n\tabstract update(deltaTime: number): void;\n\tabstract shouldUpdate(): boolean;\n}\n","import { Renderer } from \"../display/Renderer\";\nimport { IMoveable, IRenderable, TranslationBehavior, RotateBehaviour } from \"engine/propertys\";\nimport { SceneObject } from \"./SceneObject\";\nimport { Vector2 } from \"math\";\n\nexport abstract class GameObject extends SceneObject implements IMoveable, IRenderable {\n\tabstract pos: Vector2;\n\tmover: TranslationBehavior = new TranslationBehavior(this);\n\torientation: number = 0;\n\trotator: RotateBehaviour = new RotateBehaviour(this);\n\n\tabstract update(deltaTime: number): void;\n\tshouldUpdate(): boolean {\n\t\treturn true;\n\t};\n\n\tabstract render(renderer: Renderer): void;\n\tshouldRender(): boolean {\n\t\treturn true;\n\t};\n\n}\n","import { IPreUpdateable } from \"engine/propertys/IPreUpdateable\";\nimport { GameObject } from \"./GameObject\";\nimport { Input, inputKey } from \"input\";\n\ntype Control = {\n\tfunc: Function,\n\tmax_activation_Interval: number,\n\ttime_since_last_activation: number,\n}\n\nexport abstract class ControllableObject extends GameObject implements IPreUpdateable {\n\tprivate controls: Map<inputKey, Control[]> = new Map();\n\n\tpreUpdate(deltaTime: number): void {\n\t\tthis.controls.forEach((controls, key) => {\n\t\t\tif (!Input.isPressed(key)) return;\n\n\t\t\tfor (const control of controls) {\n\t\t\t\tcontrol.time_since_last_activation += deltaTime;\n\n\t\t\t\tif (control.time_since_last_activation >= control.max_activation_Interval) {\n\t\t\t\t\tcontrol.func.call(this, deltaTime);\n\t\t\t\t\tcontrol.time_since_last_activation -= control.max_activation_Interval;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\taddControl(key: inputKey, func: Function, max_activation_Interval: number = 0) {\n\t\tlet control: Control = {\n\t\t\tfunc,\n\t\t\tmax_activation_Interval,\n\t\t\ttime_since_last_activation: 0,\n\t\t}\n\t\tconst prev = this.controls.get(key) ?? [];\n\t\tprev.push(control);\n\t\tthis.controls.set(key, prev);\n\t}\n}\n","import { Util } from \"util\";\n\nexport class Thread {\n  blobURL: string;\n  worker: Worker;\n\n  constructor(workerFunc: Function, receiveFunc: Function) {\n    var blob = new Blob([`onmessage = ${workerFunc.toString()}`], { type: \"text/javascript\" });\n\n    this.blobURL = window.URL.createObjectURL(blob);\n\n    this.worker = new Worker(this.blobURL, { type: \"module\" });\n    this.worker.onmessage = (e) => receiveFunc(e);\n  }\n\n  postMessage(message: any): void {\n    this.worker.postMessage(message);\n  }\n\n  terminate() {\n    this.worker.terminate();\n    window.URL.revokeObjectURL(this.blobURL);\n  }\n}\n","export namespace array {\n\texport function getItemCyclic<T>(arr: T[], index: number): T {\n\t\tconst wrappedIndex = ((index % arr.length) + arr.length) % arr.length;\n\t\treturn arr[wrappedIndex];\n\t}\n\n\texport function getLastItem<T>(arr: T[]): T {\n\t\treturn arr[-1];\n\t}\n\n\texport function getRandomItem<T>(arr: T[]): T {\n\t\tconst randomIndex = Math.floor(Math.random() * arr.length);\n\t\treturn arr[randomIndex];\n\t}\n\n\texport function removeItemAtIndex<T>(arr: T[], index: number): T {\n\t\tif (index < 0 || index >= arr.length) throw new Error(`${index} is not Valid!`);\n\n\t\treturn arr.splice(index, 1)[0];\n\t}\n\n\texport function removeItem<T>(arr: T[], item: T): T | undefined {\n\t\tif (!arr.includes(item)) return undefined;\n\n\t\treturn arr.splice(arr.indexOf(item), 1)[0];\n\t}\n\n\texport function sum(arr: number[]): number {\n\t\treturn arr.reduce((a, b) => (a += isNaN(b) ? 0 : b));\n\t}\n\n\texport function isEmpty<T>(arr: T[]): boolean {\n\t\treturn !arr || arr.length === 0;\n\t}\n\n\texport function copyOf<T>(arr: T[]): T[] {\n\t\treturn [...arr];\n\t}\n\n\texport function connectArrays<T>(arrays: T[]): T[] {\n\t\tlet connected: T[] = [];\n\t\tfor (let arr of arrays) {\n\t\t\tconnected = connected.concat(arr);\n\t\t}\n\t\treturn connected;\n\t}\n}\n\nexport namespace map {\n\texport function copyOf<K, V>(map: Map<K, V>): Map<K, V> {\n\t\tvar newMap = new Map<K, V>();\n\t\tfor (let [key, value] of map.entries()) {\n\t\t\tnewMap.set(key, value);\n\t\t}\n\t\treturn newMap;\n\t}\n}\n\nexport namespace object {\n\texport function findClassName(clas: Object | Function): string {\n\t\treturn clas instanceof Function ? clas.name : clas.constructor.name;\n\t}\n\texport function findSuperClassName(clas: Object | Function): string {\n\t\treturn clas instanceof Function\n\t\t\t? Object.getPrototypeOf(clas).name\n\t\t\t: Object.getPrototypeOf(Object.getPrototypeOf(clas)).constructor.name;\n\t}\n\texport function findClass(clas: Object | Function): Function {\n\t\treturn clas instanceof Function ? clas : Object.getPrototypeOf(clas).constructor;\n\t}\n\texport function findSuperClass(clas: Object | Function): Function {\n\t\t// if can't access .constructor => Max superclass Found!\n\t\treturn clas instanceof Function\n\t\t\t? Object.getPrototypeOf(clas)\n\t\t\t: Object.getPrototypeOf(Object.getPrototypeOf(clas)).constructor;\n\t}\n\texport function findAllClassNames(clas: Object | Function): string[] {\n\t\tconst superClasses: string[] = [];\n\n\t\tlet currentClass = object.findClass(clas);\n\t\twhile (currentClass.name != \"\") {\n\t\t\tsuperClasses.push(currentClass.name);\n\t\t\tcurrentClass = object.findSuperClass(currentClass);\n\t\t}\n\t\treturn superClasses;\n\t}\n\texport function findAllClasses(clas: Object | Function): Function[] {\n\t\tconst superClasses: Function[] = [];\n\n\t\tlet currentClass = object.findClass(clas);\n\t\twhile (currentClass.name != \"\") {\n\t\t\tsuperClasses.push(currentClass);\n\t\t\tcurrentClass = object.findSuperClass(currentClass);\n\t\t}\n\n\t\treturn superClasses;\n\t}\n\texport function findAllSuperClassNames(clas: Object | Function): string[] {\n\t\tconst superClasses: string[] = [];\n\n\t\tlet currentClass = object.findSuperClass(clas);\n\t\twhile (currentClass.name != \"\") {\n\t\t\tsuperClasses.push(currentClass.name);\n\t\t\tcurrentClass = object.findSuperClass(currentClass);\n\t\t}\n\t\treturn superClasses;\n\t}\n\texport function findAllSuperClasses(clas: Object | Function): Function[] {\n\t\tconst superClasses: Function[] = [];\n\n\t\tlet currentClass = object.findSuperClass(clas);\n\t\twhile (currentClass.name != \"\") {\n\t\t\tsuperClasses.push(currentClass);\n\t\t\tcurrentClass = object.findSuperClass(currentClass);\n\t\t}\n\n\t\treturn superClasses;\n\t}\n}\n","import * as objectUtil from \"./object_util\";\nimport * as mathUtil from \"math/math_util\"\nimport * as vecUtil from \"math/vector_util\"\n\nexport const Util = {\n\t...objectUtil,\n\t...mathUtil,\n\t...vecUtil,\n};\n"],"mappings":";;;;;;;AAAO,IAAM,YAAN,MAA0B;AAAA,EACvB;AAAA,EAER,cAAc;AACZ,SAAK,MAAM,oBAAI,IAAmB;AAAA,EACpC;AAAA,EAEA,IAAI,KAAQ,MAAyB;AACnC,UAAM,kBAAkB,KAAK,IAAI,IAAI,GAAG;AACxC,UAAM,mBAAmB,iBAAiB,IAAI,IAAI;AAClD,QAAI,CAAC,mBAAmB,CAAC,iBAAkB;AAE3C,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,KAAQ,MAAU,OAAgB;AACpC,UAAM,YAAY,KAAK,IAAI,IAAI,GAAG;AAClC,QAAI,CAAC,UAAW,MAAK,IAAI,IAAI,KAAK,oBAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAAA,QACrD,WAAU,IAAI,MAAM,KAAK;AAAA,EAChC;AAAA,EAEA,QAAc;AACZ,SAAK,IAAI,MAAM;AAAA,EACjB;AAAA,EAEA,OAAO,KAAQ,MAAU;AACvB,UAAM,YAAY,KAAK,IAAI,IAAI,GAAG;AAClC,QAAI,CAAC,UAAW;AAAA,QACX,WAAU,OAAO,IAAI;AAAA,EAC5B;AACF;;;AC9BO,IAAM,WAAN,MAAe;AAAA,EAIrB,YAAoB,MAAwC;AAAxC;AAAA,EAA0C;AAAA,EAHtD,eAAe,KAAK,IAAI;AAAA,EACxB,YAAY;AAAA,EAIpB,QAAQ;AACP,SAAK,YAAY;AACjB,SAAK,KAAK;AAAA,EACX;AAAA,EAEA,OAAO;AACN,SAAK,YAAY;AAAA,EAClB;AAAA,EAEQ,OAAO,MAAM;AACpB,UAAM,MAAM,KAAK,IAAI;AACrB,UAAM,aAAa,MAAM,KAAK,gBAAgB;AAC9C,SAAK,eAAe;AAEpB,SAAK,KAAK,OAAO,SAAS;AAE1B,QAAI,CAAC,KAAK,WAAW;AACpB,aAAO,sBAAsB,KAAK,IAAI;AAAA,IACvC;AAAA,EACD;AACD;;;ACvBO,IAAM,QAAN,MAAY;AAAA,EACV,UAA2B,oBAAI,IAAI;AAAA;AAAA;AAAA,EAI3C,UAAU,KAAiB;AAC1B,SAAK,QAAQ,IAAI,GAAG;AAAA,EACrB;AAAA,EAEA,OAAO,IAAY;AAClB,eAAW,OAAO,KAAK,QAAS,KAAI,OAAO,EAAE;AAAA,EAC9C;AAAA,EAEA,OAAO,UAAoB;AAC1B,eAAW,OAAO,KAAK,QAAS,KAAI,OAAO,QAAQ;AAAA,EACpD;AACD;;;AChBO,IAAe,cAAf,MAA2B;AAAA,EACjB;AAAA,EACN;AAAA,EAEV,cAAc;AACb,SAAK,WAAW,IAAI,SAAS,IAAI;AACjC,SAAK,QAAQ,IAAI,MAAM;AAAA,EACxB;AAGD;;;ACXO,IAAM,kBAAN,cAA8B,YAAY;AAAA,EAChD,OAAO,WAAmB;AACzB,YAAQ,IAAI,SAAS;AAAA,EACtB;AACD;;;ACJO,IAAM,mBAAN,cAA+B,YAAY;AAAA,EACjD,OAAO,WAAmB;AACzB,YAAQ,IAAI,SAAS;AAAA,EACtB;AACD;;;ACNA,SAAS,YAAY;AAEd,IAAM,QAAN,MAAM,OAAM;AAAA,EACjB,OAAO,OAAO,IAAI,OAAM,GAAG,GAAG,GAAG,CAAC;AAAA,EAElC,IAAY;AAAA,EACZ,IAAY;AAAA,EACZ,IAAY;AAAA,EACZ,IAAY;AAAA,EAEZ,YAAY,GAAW,GAAW,GAAW,IAAY,KAAK;AAC5D,SAAK,IAAI,IAAK,IAAI,MAAO;AACzB,SAAK,IAAI,IAAK,IAAI,MAAO;AACzB,SAAK,IAAI,IAAK,IAAI,MAAO;AACzB,SAAK,IAAI,IAAK,IAAI,MAAO;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,eAAuB;AACrB,WAAO,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG;AAAA,EAC9D;AAAA,EAEA,KAAK,GAAW;AACd,SAAK,KAAM,IAAI,KAAK,MAAO;AAAA,EAC7B;AAAA,EACA,KAAK,GAAW;AACd,SAAK,KAAM,IAAI,KAAK,MAAO;AAAA,EAC7B;AAAA,EACA,KAAK,GAAW;AACd,SAAK,KAAM,IAAI,KAAK,MAAO;AAAA,EAC7B;AAAA,EACA,KAAK,GAAW;AACd,SAAK,KAAM,IAAI,KAAK,MAAO;AAAA,EAC7B;AAAA;AAAA;AAAA,EAKA,OAAO,YAAY;AACjB,WAAO,IAAI;AAAA,MACT,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AAAA,MAC9B,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AAAA,MAC9B,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AAAA,IAChC;AAAA,EACF;AAAA,EAEA,OAAO,sBAAsB;AAC3B,WAAO,KAAK,MAAM,cAAc,MAAM,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,EAC7D;AAAA,EAEA,OAAO,IAAI,OAAsB;AAC/B,QAAI,CAAC,OAAO,IAAI,KAAK,GAAG;AACtB,cAAQ,KAAK,GAAG,KAAK,mBAAmB;AACxC,aAAO,OAAM;AAAA,IACf;AAEA,QAAI,IAAI,OAAO,IAAI,KAAK;AACxB,QAAI,KAAK,OAAW,QAAO,OAAM;AACjC,WAAO;AAAA,EACT;AAAA;AAGF;AAIA,IAAM,SAAS,oBAAI,IAAmB;AAAA,EACpC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,gBAAgB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,QAAQ,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EAC/B,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,SAAS,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC;AAAA,EAC5B,CAAC,kBAAkB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC3C,CAAC,QAAQ,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,EAC7B,CAAC,cAAc,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAAA,EACtC,CAAC,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EAChC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,aAAa,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EACrC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACrC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACjC,CAAC,kBAAkB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC3C,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,WAAW,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EAClC,CAAC,QAAQ,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EAC/B,CAAC,YAAY,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,EACjC,CAAC,YAAY,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,iBAAiB,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACzC,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,aAAa,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AAAA,EAClC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,eAAe,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC;AAAA,EACtC,CAAC,kBAAkB,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;AAAA,EACzC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EACrC,CAAC,cAAc,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAAA,EACtC,CAAC,WAAW,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;AAAA,EAChC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,gBAAgB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,iBAAiB,IAAI,MAAM,IAAI,IAAI,GAAG,CAAC;AAAA,EACxC,CAAC,iBAAiB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;AAAA,EACvC,CAAC,iBAAiB,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EACxC,CAAC,cAAc,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC;AAAA,EACrC,CAAC,YAAY,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACnC,CAAC,eAAe,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,WAAW,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACpC,CAAC,cAAc,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,aAAa,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACpC,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACxC,CAAC,eAAe,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;AAAA,EACtC,CAAC,WAAW,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC;AAAA,EAClC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EAC/B,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACrC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACjC,CAAC,SAAS,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AAAA,EAC9B,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACvC,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,WAAW,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACpC,CAAC,aAAa,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACpC,CAAC,UAAU,IAAI,MAAM,IAAI,GAAG,GAAG,CAAC;AAAA,EAChC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,iBAAiB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC1C,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EACpC,CAAC,gBAAgB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,wBAAwB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACjD,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACxC,CAAC,iBAAiB,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,gBAAgB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,kBAAkB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC3C,CAAC,kBAAkB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC3C,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACxC,CAAC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AAAA,EAC7B,CAAC,aAAa,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;AAAA,EACpC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,WAAW,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC;AAAA,EAClC,CAAC,UAAU,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;AAAA,EAC/B,CAAC,oBAAoB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC7C,CAAC,cAAc,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,EACnC,CAAC,gBAAgB,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAAA,EACxC,CAAC,gBAAgB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACzC,CAAC,kBAAkB,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EAC1C,CAAC,mBAAmB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC5C,CAAC,qBAAqB,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EAC5C,CAAC,mBAAmB,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EAC3C,CAAC,mBAAmB,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAAA,EAC3C,CAAC,gBAAgB,IAAI,MAAM,IAAI,IAAI,GAAG,CAAC;AAAA,EACvC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACxC,CAAC,QAAQ,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,EAC7B,CAAC,WAAW,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACpC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EAChC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACrC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EACjC,CAAC,aAAa,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,EACnC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,iBAAiB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC1C,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,iBAAiB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC1C,CAAC,iBAAiB,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAC1C,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EAChC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACjC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACjC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,UAAU,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC;AAAA,EACjC,CAAC,OAAO,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;AAAA,EAC5B,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,aAAa,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,eAAe,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACtC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,EACtC,CAAC,YAAY,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;AAAA,EACnC,CAAC,YAAY,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,UAAU,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACjC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,WAAW,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACpC,CAAC,aAAa,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAAA,EACrC,CAAC,aAAa,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACjC,CAAC,eAAe,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EACtC,CAAC,aAAa,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,OAAO,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAChC,CAAC,QAAQ,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC;AAAA,EAC/B,CAAC,WAAW,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACpC,CAAC,UAAU,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,EACjC,CAAC,aAAa,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,EACrC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACnC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,SAAS,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EAClC,CAAC,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,EACvC,CAAC,UAAU,IAAI,MAAM,KAAK,KAAK,CAAC,CAAC;AAAA,EACjC,CAAC,eAAe,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;AACzC,CAAC;;;ACvMM,IAAe,WAAf,MAAwB;AAAA,EAC9B,OAAO,cAA0B;AAAA,IAChC,OAAO,MAAM,IAAI,OAAO;AAAA,IACxB,UAAU;AAAA,EACX;AAKD;;;ACnBA,SAAS,QAAAA,aAAY;AAEd,IAAM,UAAN,MAAiB;AAAA,EACd;AAAA,EAEA;AAAA,EACA;AAAA,EAER,YAAY,GAAW,GAAW;AAChC,SAAK,QAAQ,CAAC;AAEd,SAAK,QAAQ;AACb,SAAK,QAAQ;AAEb,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,MAAM,CAAC;AACX,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,KAAK,IAAI;AAAA,MACf;AACA,WAAK,MAAM,KAAK,GAAG;AAAA,IACrB;AAAA,EACF;AAAA,EAEA,YAAY,GAAW,GAAoB;AACzC,WAAO,KAAK,IAAI,GAAG,CAAC,MAAM;AAAA,EAC5B;AAAA,EAEA,UAAU,GAAW,GAAiB;AACpC,SAAK,IAAI,GAAG,GAAG,IAAI;AAAA,EACrB;AAAA,EAEA,IAAI,GAAW,GAAuB;AACpC,UAAM,SAAS,KAAK,QAAQ,IAAI;AAChC,UAAM,OAAOA,MAAK,MAAM,cAAc,KAAK,OAAO,MAAM;AACxD,WAAOA,MAAK,MAAM,cAAc,MAAM,CAAC;AAAA,EACzC;AAAA,EAEA,IAAI,GAAW,GAAW,SAA2B;AACnD,QAAI,IAAI,KAAK,KAAK,KAAK,SAAS,GAAG;AACjC,cAAQ,KAAK,GAAG,CAAC,oBAAoB;AACrC;AAAA,IACF;AACA,QAAI,IAAI,KAAK,KAAK,KAAK,SAAS,GAAG;AACjC,cAAQ,KAAK,GAAG,CAAC,oBAAoB;AACrC;AAAA,IACF;AAEA,UAAM,SAAS,KAAK,QAAQ,IAAI;AAEhC,SAAK,MAAM,MAAM,EAAE,CAAC,IAAI;AAAA,EAC1B;AAAA,EAEA,WAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,WAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AACF;;;AC3DA,SAAS,QAAAC,aAAY;AAEd,IAAM,UAAN,MAAM,SAAQ;AAAA,EACnB;AAAA,EACA;AAAA,EAEA,YAAY,GAAY,GAAY;AAClC,SAAK,IAAI,CAAC,IAAI,IAAI;AAClB,SAAK,IAAI,CAAC,IAAI,IAAI;AAAA,EACpB;AAAA,EAEA,IAAI,MAAwB;AAC1B,WAAO,IAAI,SAAQ,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;AAAA,EACrD;AAAA,EAEA,SAAS,MAAwB;AAC/B,WAAO,IAAI,SAAQ,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,QAAyB;AAC7B,WAAO,IAAI,SAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,MAAM;AAAA,EACrD;AAAA,EAEA,WAAW,MAAuB;AAChC,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,EACzC;AAAA,EAEA,aAAa,MAAuB;AAClC,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,EACzC;AAAA,EAEA,SAAS,OAAyB;AAChC,WAAO,IAAI,SAAQ,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC;AAAA,EAC/E;AAAA,EAEA,YAAqB;AACnB,WAAO,IAAI,SAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AAAA,EACpC;AAAA,EAEA,eAAuB;AACrB,WAAO,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;AAAA,EAC5D;AAAA,EAEA,MAAM,MAAuB;AAC3B,UAAM,eAAeA,MAAK,KAAK,aAAa;AAAA,MAC1C,KAAK,WAAW,IAAI,KAAK,KAAK,aAAa,IAAI,KAAK,aAAa;AAAA,IACnE;AACA,QAAI,MAAM,YAAY,EAAG,QAAO;AAChC,WAAO,KAAK,aAAa,IAAI,KAAK,IAAI,eAAe,CAAC;AAAA,EACxD;AAAA;AAAA;AAAA,EAKA,OAAO,IAAI,MAAe,MAAwB;AAChD,WAAO,IAAI,SAAQ,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;AAAA,EACrD;AAAA,EAEA,OAAO,yBAAyB,OAAgB,WAAmB,UAA2B;AAC5F,gBAAYA,MAAK,KAAK,QAAQ,SAAS,SAAS;AAChD,UAAM,KAAK,KAAK,IAAI,SAAS,IAAI;AACjC,UAAM,KAAK,KAAK,IAAI,SAAS,IAAI;AACjC,WAAO,IAAI,SAAQ,MAAM,IAAI,IAAI,MAAM,IAAI,EAAE;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,mBAAmB,QAAiB,KAAc,OAAwB;AAC/E,QAAI,MAAM,IAAI,SAAS,MAAM;AAC7B,QAAI,MAAM,KAAK,IAAI,KAAK;AACxB,QAAI,MAAM,KAAK,IAAI,KAAK;AAExB,QAAI,UAAU,IAAI;AAAA,MAChB,IAAI,IAAI,MAAM,IAAI,IAAI;AAAA,MACtB,IAAI,IAAI,MAAM,IAAI,IAAI;AAAA,IACxB;AAEA,WAAO,QAAQ,IAAI,MAAM;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,qBAAqB,QAAiB,KAAc,OAAwB;AACjF,QAAI,MAAM,IAAI,SAAS,MAAM;AAC7B,QAAI,YAAY,IAAI,aAAa;AAEjC,QAAI,SAAS,IAAI;AAAA,MACf,KAAK,IAAI,KAAK,IAAI;AAAA,MAClB,KAAK,IAAI,KAAK,IAAI;AAAA,IACpB;AAEA,WAAO,OAAO,IAAI,MAAM;AAAA,EAC1B;AACF;;;AC/FA;AAAA;AAAA;AAAA;AAEO,IAAU;AAAA,CAAV,CAAUC,UAAV;AACE,WAAS,MAAM,GAAW,eAAuB,GAAW;AACjE,UAAM,SAAS,KAAK,IAAI,IAAI,YAAY;AACxC,WAAO,KAAK,MAAM,IAAI,MAAM,IAAI;AAAA,EAClC;AAHO,EAAAA,MAAS;AAIT,WAAS,MAAM,GAAW,eAAuB,GAAW;AACjE,UAAM,SAAS,KAAK,IAAI,IAAI,YAAY;AACxC,WAAO,KAAK,MAAM,IAAI,MAAM,IAAI;AAAA,EAClC;AAHO,EAAAA,MAAS;AAIT,WAAS,KAAK,GAAW,eAAuB,GAAW;AAChE,UAAM,SAAS,KAAK,IAAI,IAAI,YAAY;AACxC,WAAO,KAAK,KAAK,IAAI,MAAM,IAAI;AAAA,EACjC;AAHO,EAAAA,MAAS;AAKT,MAAU;AAAV,IAAUC,YAAV;AACE,aAAS,QAAQ,OAAe,KAAa,eAAuB,GAAW;AACpF,aAAO,MAAM,KAAK,OAAO,KAAK,MAAM,SAAS,OAAO,YAAY;AAAA,IAClE;AAFO,IAAAA,QAAS;AAIT,aAAS,OAAe;AAC7B,aAAO,KAAK,OAAO,IAAI,MAAM,IAAI;AAAA,IACnC;AAFO,IAAAA,QAAS;AAAA,KALD,SAAAD,MAAA,WAAAA,MAAA;AAYV,MAAU;AAAV,IAAUE,kBAAV;AACE,aAAS,IAAI,QAAwB;AAE1C,aAAO,KAAK,IAAI,QAAQ,SAAS,MAAM,CAAC;AAAA,IAC1C;AAHO,IAAAA,cAAS;AAIT,aAAS,OAAO,KAAqB;AAC1C,aAAO,QAAQ,SAAS,KAAK,KAAK,GAAG,CAAC;AAAA,IACxC;AAFO,IAAAA,cAAS;AAAA,KALD,eAAAF,MAAA,iBAAAA,MAAA;AAUV,MAAU;AAAV,IAAUG,aAAV;AACE,aAAS,SAAS,QAAgB;AACvC,aAAQ,SAAS,KAAK,KAAM;AAAA,IAC9B;AAFO,IAAAA,SAAS;AAIT,aAAS,SAAS,KAAa;AACpC,aAAQ,MAAM,MAAO,KAAK;AAAA,IAC5B;AAFO,IAAAA,SAAS;AAIT,aAAS,QAAQC,UAA0B,QAAgB,GAAG;AACnE,UAAI,OAAOA,aAAY,UAAU;AAC/B,QAAAA,WAAU,WAAWA,QAAO;AAC5B,YAAI,MAAMA,QAAO,EAAG,OAAM,IAAI,MAAM,GAAGA,QAAO,qBAAqB;AAAA,MACrE;AAEA,aAAQA,WAAU,MAAO;AAAA,IAC3B;AAPO,IAAAD,SAAS;AAAA,KATD,UAAAH,MAAA,YAAAA,MAAA;AAAA,GApCF;;;ACFjB;AAAA;AAAA;AAAA;AAEO,IAAU;AAAA,CAAV,CAAUK,YAAV;AACE,WAAS,SAAS,MAAe,MAAuB;AAC7D,WAAO,KAAK,SAAS,IAAI,EAAE,aAAa;AAAA,EAC1C;AAFO,EAAAA,QAAS;AAAA,GADD;;;ACDjB,SAAS,QAAAC,aAAY;;;ACSd,IAAM,uBAAN,MAA2B;AAAA,EAIhC,YAAoB,MAAoB;AAApB;AAAA,EAAsB;AAAA,EAH1C,mBAA8B,CAAC;AAAA,EAC/B,oBAA6B;AAAA,EAI7B,gBAAgB,OAA8B;AAC5C,WAAO,UAAU,cAAc,KAAK,MAAM,KAAK;AAAA,EACjD;AAAA,EAEA,kBAA6B;AAC3B,WAAO,KAAK,KAAK,OAAO,gBAAgB,KAAK,KAAK,KAAK,KAAK,KAAK,WAAW;AAAA,EAC9E;AACF;;;ACjBO,IAAM,kBAAN,MAAsB;AAAA,EAC5B,YAAoB,MAAmB;AAAnB;AAAA,EAAqB;AAAA,EAEzC,OAAO,SAAuB;AAC7B,SAAK,KAAK,eAAe;AACzB,SAAK,KAAK,eAAe;AAAA,EAC1B;AAAA,EAEA,YAAY,SAAiB;AAC5B,SAAK,KAAK,cAAe,UAAU;AAAA,EACpC;AACD;;;ACXO,IAAM,gBAAN,MAAoB;AAAA,EAC1B,YAAoB,MAAyB;AAAzB;AAAA,EAA2B;AAAA,EAE/C,MAAM,QAAgB;AACrB,SAAK,KAAK,SAAS;AAAA,EACpB;AAAA,EAEA,SAAS,OAAe;AACvB,SAAK,KAAK,QAAQ;AAAA,EACnB;AACD;;;ACTO,IAAM,sBAAN,MAA0B;AAAA,EAEhC,YAAoB,MAAwB;AAAxB;AAAA,EAA0B;AAAA,EAE9C,cAAc,SAAiB,UAAwB;AACtD,UAAM,UAAW,UAAU,KAAK,KAAM;AACtC,UAAM,KAAK,KAAK,IAAI,OAAO,IAAI;AAC/B,UAAM,KAAK,KAAK,IAAI,OAAO,IAAI;AAC/B,SAAK,KAAK,IAAI,QAAQ,IAAI,EAAE,CAAC;AAAA,EAC9B;AAAA,EAEA,KAAK,KAAoB;AACxB,SAAK,KAAK,IAAI,KAAK,IAAI;AACvB,SAAK,KAAK,IAAI,KAAK,IAAI;AAAA,EACxB;AACD;;;ACnBO,IAAeC,UAAf,MAA4C;AAAA;AAAA,EAE1C;AAAA,EACA;AAAA,EACA,QAAgB;AAAA,EAChB,SAAwB,IAAI,cAAc,IAAI;AAMvD;;;ACXO,IAAM,SAAN,cAAqBC,QAAO;AAAA,EACjC;AAAA;AAAA,EAEgB;AAAA,EACA;AAAA,EAEhB,YAAY,SAAiB,GAAG;AAC9B,UAAM;AACN,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA;AAAA,EAKA,gBAAgB,KAAc,aAAgC;AAC5D,WAAO;AAAA,MACL,QAAQ,yBAAyB,KAAK,aAAa,KAAK,MAAM;AAAA,MAC9D,QAAQ,yBAAyB,KAAK,MAAM,aAAa,KAAK,MAAM;AAAA,IACtE;AAAA,EACF;AAAA,EAEA,cAAc,OAAyB;AACrC,WAAO,MAAM,aAAa,KAAK,KAAK;AAAA,EACtC;AACF;;;ACzBO,IAAM,MAAN,MAAU;AAAA,EACf,OAAO,cAAc,MAAoB,MAA6B;AACpE,QAAI,KAAK,kBAAkB,UAAU,KAAK,kBAAkB,OAAQ,QAAO;AAC3E,WAAO,KAAK,aAAa,MAAM,IAAI,KAAK,KAAK,aAAa,MAAM,IAAI;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAe,aAAa,UAAwB,UAAwB;AAC1E,UAAM,UAAU,SAAS,SAAS,gBAAgB;AAClD,UAAM,UAAU,SAAS,SAAS,gBAAgB;AAElD,QAAI,YAAY,QAAQ,QAAQ,SAAS,CAAC;AAE1C,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAM,QAAQ,QAAQ,CAAC;AAEvB,YAAM,SAAS,UAAU,SAAS,KAAK,EAAE,UAAU;AAGnD,UAAI,OAAO;AACX,UAAI,OAAO;AAEX,cAAQ,QAAQ,CAACC,WAAU;AACzB,cAAM,MAAMA,OAAM,WAAW,MAAM,IAAI,OAAO,aAAa;AAC3D,eAAO,KAAK,IAAI,MAAM,GAAG;AACzB,eAAO,KAAK,IAAI,MAAM,GAAG;AAAA,MAC3B,CAAC;AAID,UAAI,OAAO;AACX,UAAI,OAAO;AAEX,cAAQ,QAAQ,CAACA,WAAU;AACzB,cAAM,MAAMA,OAAM,WAAW,MAAM,IAAI,OAAO,aAAa;AAC3D,eAAO,KAAK,IAAI,MAAM,GAAG;AACzB,eAAO,KAAK,IAAI,MAAM,GAAG;AAAA,MAC3B,CAAC;AAED,UAAI,EAAE,QAAQ,QAAQ,QAAQ,MAAO,QAAO;AAE5C,kBAAY;AAAA,IACd;AACA,WAAO;AAAA,EACT;AACF;;;ACpDA,SAAS,QAAAC,aAAY;;;ACCrB,SAAS,QAAAC,aAAY;AAKd,IAAM,WAAN,MAAM,kBAAiBC,QAAO;AAAA;AAAA,EAE5B,QAAmB,IAAI,MAAM;AAAA;AAAA,EAE7B;AAAA,EACA;AAAA,EAEP,YAAY,OAAkB;AAC5B,UAAM;AAEN,SAAK,QAAQ;AACb,SAAK,iBAAiB,KAAK,qBAAqB;AAChD,SAAK,WAAW,UAAS,WAAW,IAAI;AAAA,EAC1C;AAAA,EAEQ,uBAAuB;AAC7B,QAAI,kBAAkB,KAAK,MAAM,IAAI,OAAK,EAAE,aAAa,CAAC;AAC1D,SAAK,iBAAiB,KAAK,IAAI,GAAG,eAAe;AACjD,WAAO,KAAK;AAAA,EACd;AAAA,EAEQ,aAAsB;AAC5B,QAAI,SAAS,IAAI,QAAQ;AAEzB,aAAS,SAAS,KAAK,OAAO;AAC5B,eAAS,OAAO,IAAI,KAAK;AAAA,IAC3B;AAEA,WAAO,OAAO,MAAM,IAAI,KAAK,MAAM,MAAM;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKA,cAAoB;AAElB,UAAM,aAAa,KAAK,WAAW;AAGnC,SAAK,MAAM,QAAQ,CAAC,UAAU;AAC5B,YAAM,KAAK,WAAW;AACtB,YAAM,KAAK,WAAW;AAAA,IACxB,CAAC;AAGD,SAAK,qBAAqB;AAAA,EAC5B;AAAA;AAAA;AAAA,EAKA,gBAAgB,KAAc,aAAgC;AAC5D,WAAO,KAAK,MAAM,IAAI,OAAK,QAAQ,qBAAqB,KAAK,EAAE,IAAI,GAAG,GAAG,WAAW,CAAC;AAAA,EACvF;AAAA,EAEA,cAAc,OAAyB;AACrC,WAAO,UAAS,eAAe,MAAM,KAAK;AAAA,EAC5C;AAAA;AAAA;AAAA,EAKA,OAAO,SAAS,SAA2B;AACzC,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,IAAI,QAAQ,MAAM,QAAQ,KAAK;AAC7C,YAAM,IAAI,QAAQ,MAAM,CAAC;AACzB,YAAM,IAAIC,MAAK,MAAM,cAAc,QAAQ,OAAO,IAAI,CAAC;AAEvD,cAAQ,EAAE,IAAI,EAAE;AAChB,cAAQ,EAAE,IAAI,EAAE;AAAA,IAClB;AAEA,WAAO,OAAO;AAAA,EAChB;AAAA,EAEA,OAAO,YAAY,SAAmC;AACpD,WAAO,UAAS,SAAS,OAAO,IAAI,IAAI,cAAc;AAAA,EACxD;AAAA,EAEA,OAAO,WAAW,SAA4B;AAC5C,QAAI,QAAQ,MAAM,UAAU,EAAG,QAAO;AAEtC,UAAM,UAAU,UAAS,YAAY,OAAO;AAE5C,aAAS,IAAI,GAAG,IAAI,QAAQ,MAAM,QAAQ,KAAK;AAC7C,YAAM,IAAIA,MAAK,MAAM,cAAc,QAAQ,OAAO,IAAI,CAAC;AACvD,YAAM,IAAI,QAAQ,MAAM,CAAC;AACzB,YAAM,IAAIA,MAAK,MAAM,cAAc,QAAQ,OAAO,IAAI,CAAC;AAEvD,YAAM,KAAK,EAAE,SAAS,CAAC;AACvB,YAAM,KAAK,EAAE,SAAS,CAAC;AAEvB,UAAI,CAAC,UAAS,SAAS,SAAS,GAAG,aAAa,EAAE,CAAC,EAAG,QAAO;AAAA,IAC/D;AACA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,SAAS,SAAyB,cAAsB;AAC7D,QAAI,WAAW,eAAe,gBAAgB,EAAG,QAAO;AACxD,QAAI,WAAW,sBAAsB,gBAAgB,EAAG,QAAO;AAC/D,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,eAAe,SAAmB,OAAgB;AACvD,UAAM,UAAU,UAAS,YAAY,OAAO;AAE5C,aAAS,IAAI,GAAG,IAAI,QAAQ,MAAM,QAAQ,KAAK;AAC7C,YAAM,IAAI,QAAQ,MAAM,CAAC;AAEzB,YAAM,IAAIA,MAAK,MAAM,cAAc,QAAQ,OAAO,IAAI,CAAC;AAEvD,YAAM,SAAS,EAAE,SAAS,CAAC;AAC3B,YAAM,SAAS,MAAM,SAAS,CAAC;AAE/B,YAAM,QAAQ,OAAO,aAAa,MAAM;AAExC,UAAI,CAAC,UAAS,SAAS,SAAS,KAAK;AACnC,eAAO;AAAA,IACX;AACA,WAAO;AAAA,EACT;AACF;;;AC9HO,IAAM,WAAN,cAAuB,SAAS;AAAA,EACrC,YAAY,IAAa,IAAa,IAAa;AACjD,QAAI,QAAQ;AAAA,MACV;AAAA,MAAI;AAAA,MAAI;AAAA,IACV;AACA,UAAM,KAAK;AAEX,SAAK,YAAY;AAAA,EACnB;AACF;;;AFNO,IAAM,gBAAN,MAAM,eAAc;AAAA,EACzB,OAAO,YAAY,KAAmC;AACpD,QAAI,EAAE,IAAI,kBAAkB;AAC1B,YAAM,IAAI,MAAM,yCAAyC;AAE3D,UAAM,WAAW,IAAI,OAAO;AAC5B,UAAM,UAAU,SAAS,YAAY,IAAI,MAAM;AAE/C,UAAM,OAAc,CAAC;AAErB,UAAM,YAAsB,CAAC;AAC7B,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,gBAAU,KAAK,CAAC;AAAA,IAClB;AAEA,WAAO,UAAU,SAAS,GAAG;AAC3B,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,cAAM,KAAKC,MAAK,MAAM,cAAc,WAAW,IAAI,CAAC;AACpD,cAAM,KAAK,UAAU,CAAC;AACtB,cAAM,KAAKA,MAAK,MAAM,cAAc,WAAW,IAAI,CAAC;AAEpD,cAAM,KAAK,SAAS,EAAE;AACtB,cAAM,KAAK,SAAS,EAAE;AACtB,cAAM,KAAK,SAAS,EAAE;AAEtB,cAAM,WAAW,GAAG,SAAS,EAAE;AAC/B,cAAM,WAAW,GAAG,SAAS,EAAE;AAG/B,YAAI,CAAC,SAAS,SAAS,SAAS,SAAS,aAAa,QAAQ,CAAC,EAAG;AAElE,YAAI,QAAQ;AAGZ,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAI,KAAK,MAAM,KAAK,MAAM,KAAK,GAAI;AAEnC,cAAI,IAAI,SAAS,CAAC;AAElB,cAAI,eAAc,kBAAkB,GAAG,IAAI,IAAI,EAAE,GAAG;AAClD,oBAAQ;AACR;AAAA,UACF;AAAA,QACF;AAEA,YAAI,CAAC,MAAO;AAEZ,cAAM,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,EAAE,GAAG,IAAI,WAAW;AACtE,aAAK,KAAK,GAAG;AAEb,QAAAA,MAAK,MAAM,kBAAkB,WAAW,CAAC;AACzC;AAAA,MACF;AAAA,IACF;AAEA,UAAM,gBAAgB,IAAI,SAAS,SAAS,UAAU,CAAC,CAAC,GAAG,SAAS,UAAU,CAAC,CAAC,GAAG,SAAS,UAAU,CAAC,CAAC,CAAC;AACzG,UAAM,WAAW,IAAI,IAAI,IAAI,KAAK,eAAe,IAAI,WAAW;AAChE,SAAK,KAAK,QAAQ;AAElB,WAAO;AAAA,EACT;AAAA,EAEA,OAAe,kBAAkB,GAAY,GAAY,GAAY,GAAqB;AACxF,UAAM,KAAK,EAAE,SAAS,CAAC;AACvB,UAAM,KAAK,EAAE,SAAS,CAAC;AACvB,UAAM,KAAK,EAAE,SAAS,CAAC;AAEvB,UAAM,KAAK,EAAE,SAAS,CAAC;AACvB,UAAM,KAAK,EAAE,SAAS,CAAC;AACvB,UAAM,KAAK,EAAE,SAAS,CAAC;AAEvB,UAAM,SAAS,GAAG,aAAa,EAAE;AACjC,UAAM,SAAS,GAAG,aAAa,EAAE;AACjC,UAAM,SAAS,GAAG,aAAa,EAAE;AAEjC,QAAI,SAAS,KAAK,SAAS,KAAK,SAAS,EAAG,QAAO;AACnD,WAAO;AAAA,EACT;AACF;AAEA,IAAM,MAAN,MAAkC;AAAA,EAChC;AAAA,EACA,QAA6B,IAAI,oBAAoB,IAAI;AAAA,EACzD,WAAiC,IAAI,qBAAqB,IAAI;AAAA,EAC9D,UAA2B,IAAI,gBAAgB,IAAI;AAAA,EACnD;AAAA,EACA;AAAA,EAEA,YAAY,KAAc,QAAkB,cAAsB,GAAG;AACnE,SAAK,MAAM;AACX,SAAK,SAAS;AACd,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,mBAA8B,CAAC;AAAA,EAC/B,oBAA6B;AAAA,EAE7B,kBAA6B;AAC3B,QAAI,KAAK,kBAAmB,QAAO,KAAK;AAExC,SAAK,mBAAmB,KAAK,OAAO,gBAAgB,KAAK,KAAK,KAAK,WAAW;AAC9E,SAAK,oBAAoB;AACzB,WAAO,KAAK;AAAA,EACd;AACF;;;ARvGO,IAAU;AAAA,CAAV,CAAUC,eAAV;AACE,WAAS,cAAc,MAAoB,MAA6B;AAC7E,KAAC,MAAM,IAAI,EAAE,QAAQ,CAAC,QAAQ,IAAI,SAAS,gBAAgB,CAAC;AAE5D,QAAI,KAAK,kBAAkB,UAAU,KAAK,kBAAkB,QAAQ;AAClE,aAAO,mBAAmB,MAAM,IAAI;AAAA,IACtC;AAEA,QAAI,CAAC,mBAAmB,MAAM,IAAI,EAAG,QAAO;AAE5C,QAAI,CAAC,KAAK,OAAO,UAAU;AACzB,YAAM,QAAQ,cAAc,YAAY,IAAI;AAC5C,eAAS,QAAQ,OAAO;AACtB,YAAIA,WAAU,cAAc,MAAM,IAAI,EAAG,QAAO;AAAA,MAClD;AACA,aAAO;AAAA,IACT;AACA,QAAI,CAAC,KAAK,OAAO,UAAU;AACzB,YAAM,QAAQ,cAAc,YAAY,IAAI;AAC5C,eAAS,QAAQ,OAAO;AACtB,YAAIA,WAAU,cAAc,MAAM,IAAI,EAAG,QAAO;AAAA,MAClD;AACA,aAAO;AAAA,IACT;AAEA,WAAO,IAAI,cAAc,MAAM,IAAI;AAAA,EACrC;AAzBO,EAAAA,WAAS;AA2BT,WAAS,cAAc,KAAmB,YAA8B;AAE7E,UAAM,aAAa,QAAQ,qBAAqB,IAAI,KAAK,YAAY,CAAC,IAAI,WAAW;AACrF,WAAO,IAAI,OAAO,cAAc,UAAU;AAAA,EAC5C;AAJO,EAAAA,WAAS;AAMT,WAAS,mBAAmB,MAAoB,MAA6B;AAClF,WAAO;AAAA,MACL,KAAK;AAAA,MACL,KAAK,OAAO;AAAA,MACZ,KAAK;AAAA,MACL,KAAK,OAAO;AAAA,IACd;AAAA,EACF;AAPO,EAAAA,WAAS;AAST,WAAS,gBAAgB,IAAa,IAAY,IAAa,IAAqB;AACzF,WAAOC,MAAK,OAAO,SAAS,IAAI,EAAE,IAAI,KAAK;AAAA,EAC7C;AAFO,EAAAD,WAAS;AAAA,GA3CD;;;AWLV,IAAM,YAAN,cAAwB,SAAS;AAAA,EACtC;AAAA,EACA;AAAA,EAEA,YAAY,OAAe,QAAgB;AACzC,UAAM;AAAA;AAAA,MACJ,IAAI,QAAQ,GAAG,CAAC;AAAA,MAChB,IAAI,QAAQ,GAAG,MAAM;AAAA,MACrB,IAAI,QAAQ,OAAO,MAAM;AAAA,MACzB,IAAI,QAAQ,OAAO,CAAC;AAAA,IACtB,CAAC;AACD,SAAK,YAAY;AAEjB,SAAK,QAAQ;AACb,SAAK,SAAS;AAAA,EAChB;AACF;;;ACnBO,IAAM,OAAN,MAAW;AAAA,EACjB,YAAqB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,SAAiB,MAAM,UAAkB,KAAK,UAAkB,GAAG;AAC9E,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,cAAc;AAAA,EACpB;AAAA,EAEA,SAAwB;AACvB,QAAI,CAAC,KAAK,UAAW,QAAO;AAE5B,UAAM,WAAW,KAAK,cAAc,KAAK;AACzC,QAAI,WAAW,KAAK,QAAS,QAAO;AAEpC,SAAK,cAAc;AACnB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,UAAyB;AACxB,QAAI,CAAC,KAAK,UAAW,QAAO;AAE5B,UAAM,WAAW,KAAK,cAAc,KAAK;AACzC,QAAI,WAAW,KAAK,QAAS,QAAO;AAEpC,SAAK,cAAc;AACnB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,QAAQ,OAAe,GAAG;AACzB,SAAK,cAAc;AAAA,EACpB;AAAA,EAEA,aAAa,OAAgB;AAC5B,SAAK,YAAY;AAAA,EAClB;AAAA,EAEA,SAAS;AACR,SAAK,YAAY;AAAA,EAClB;AAAA,EACA,UAAU;AACT,SAAK,YAAY;AAAA,EAClB;AACD;;;AC1CO,IAAM,SAAN,MAAwD;AAAA,EAC9D,MAAe,IAAI,QAAQ;AAAA,EAC3B;AAAA,EACA,cAAsB;AAAA,EACtB,WAAiC,IAAI,qBAAqB,IAAI;AAAA,EAC9D,QAA6B,IAAI,oBAAoB,IAAI;AAAA,EACzD,UAA2B,IAAI,gBAAgB,IAAI;AAAA,EAEnD,eAAwB;AAAA,EAEd,OAAO,IAAI,KAAK;AAAA,EAE1B,YAAY,OAAe,QAAgB;AAC1C,SAAK,SAAS,IAAI,UAAU,OAAO,MAAM;AAAA,EAC1C;AAAA,EAEA,OAAO,SAAiB;AACvB,SAAK,eAAe;AACpB,SAAK,eAAe;AAEpB,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEA,mBAA8B,CAAC;AAAA,EAC/B,oBAA6B;AAAA,EAE7B,kBAA6B;AAC5B,QAAI,KAAK,kBAAmB,QAAO,KAAK;AAExC,SAAK,OAAO,OAAO,SAAS,IAAI,KAAK,KAAK,WAAW;AACrD,SAAK,mBAAmB,KAAK,OAAO,gBAAgB,KAAK,KAAK,KAAK,WAAW;AAC9E,SAAK,oBAAoB;AACzB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,gBAAgB,OAA8B;AAC7C,WAAO,UAAU,cAAc,MAAM,KAAK;AAAA,EAC3C;AACD;;;AC5CA,SAAS,QAAAE,aAAY;AAIrB,IAAM,OAA8B,oBAAI,IAAI;AAAA,EAC1C,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,UAAU,WAAW;AAAA,EACtB,CAAC,UAAU,YAAY;AAAA,EACvB,CAAC,UAAU,aAAa;AAAA,EACxB,CAAC,OAAO,KAAK;AAAA,EACb,CAAC,SAAS,OAAO;AAAA,EACjB,CAAC,KAAK,OAAO;AAAA,EACb,CAAC,WAAW,MAAM;AAAA,EAClB,CAAC,YAAY,UAAU;AAAA,EACvB,CAAC,OAAO,KAAK;AAAA,EACb,CAAC,aAAa,MAAM;AAAA,EACpB,CAAC,cAAc,OAAO;AAAA,EACtB,CAAC,WAAW,IAAI;AAAA,EAChB,CAAC,aAAa,MAAM;AACtB,CAAC;AAEM,IAAM,QAAN,MAAM,OAAM;AAAA,EACjB,OAAO,gBAAyC,oBAAI,IAAI;AAAA,EAExD,OAAO,cAA0B,IAAI,MAAM;AAAA,EAE3C,OAAO,OAAO,IAAI,QAAQ;AAAA;AAAA,EAG1B,OAAO,oBAAoB;AAEzB,WAAO,iBAAiB,aAAa,CAAC,UAAsB;AAC1D,aAAM,QAAQ,OAAM,YAAY,UAAU,MAAM,MAAM,CAAC;AACvD,aAAM,KAAK,IAAI,MAAM;AACrB,aAAM,KAAK,IAAI,MAAM;AAAA,IACvB,CAAC;AACD,WAAO,iBAAiB,WAAW,CAAC,UAAsB;AACxD,aAAM,MAAM,OAAM,YAAY,UAAU,MAAM,MAAM,CAAC;AAAA,IACvD,CAAC;AACD,WAAO,iBAAiB,aAAa,CAAC,UAAsB;AAC1D,aAAM,KAAK,IAAI,MAAM;AACrB,aAAM,KAAK,IAAI,MAAM;AAAA,IACvB,CAAC;AAGD,WAAO,iBAAiB,WAAW,CAAC,UAAyB;AAC3D,aAAM,QAAQ,OAAM,YAAY,MAAM,GAAG,CAAC;AAAA,IAC5C,CAAC;AACD,WAAO,iBAAiB,SAAS,CAAC,UAAyB;AACzD,aAAM,MAAM,OAAM,YAAY,MAAM,GAAG,CAAC;AAAA,IAC1C,CAAC;AAGD,WAAO,iBAAiB,QAAQ,MAAM;AACpC,WAAK,cAAc,IAAI,MAAM;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,iBAAiD,OAAU,KAAa,MAAgB;AAC7F,QAAI,CAAC,OAAM,cAAc,IAAI,KAAK,EAAG,QAAO,iBAAiB,OAAO,OAAM,aAAa;AAEvF,QAAI,WAAW,OAAM,cAAc,IAAI,KAAK;AAC5C,QAAI,CAAC,SAAU,YAAW,IAAI,MAAM;AAEpC,aAAS,KAAK,IAAI,SAAS,KAAK,IAAI,CAAC;AACrC,WAAM,cAAc,IAAI,OAAO,QAAQ;AAAA,EACzC;AAAA,EAEA,OAAO,oBAAoD,OAAU,KAAa;AAChF,UAAM,WAAW,OAAM,cAAc,IAAI,KAAK;AAC9C,QAAI,CAAC,SAAU;AAEf,aAAS,OAAO,UAAU;AACxB,UAAI,IAAI,OAAO,IAAK,CAAAC,MAAK,MAAM,WAAW,UAAU,GAAG;AAAA,IACzD;AAAA,EACF;AAAA,EAEA,OAAe,cAAc,OAAc;AACzC,QAAI,WAAW,OAAM,cAAc,IAAI,MAAM,IAAI;AACjD,QAAI,CAAC,SAAU;AAEf,QAAI,iBAAiB,WAAY,QAAM,OAAO,IAAI,QAAQ,MAAM,SAAS,MAAM,OAAO;AAEtF,aAAS,QAAQ,CAACC,cAAa;AAC7B,MAAAA,UAAS,KAAK,KAAKA,UAAS,KAAK,KAAK;AAAA,IACxC,CAAC;AAAA,EACH;AAAA,EAEA,OAAe,QAAQ,KAA2B;AAChD,QAAI,CAAC,IAAK;AAEV,QAAI,CAAC,KAAK,YAAY,SAAS,GAAG,GAAG;AACnC,WAAK,YAAY,KAAK,GAAG;AAAA,IAC3B;AAAA,EACF;AAAA,EAEA,OAAe,MAAM,KAA2B;AAC9C,QAAI,CAAC,IAAK;AAEV,QAAI,KAAK,YAAY,SAAS,GAAG,GAAG;AAClC,MAAAD,MAAK,MAAM,WAAW,KAAK,aAAa,GAAG;AAAA,IAC7C;AAAA,EACF;AAAA,EAEA,OAAO,YAAY,KAAmC;AACpD,UAAM,IAAI,YAAY;AACtB,QAAI,CAAC,KAAK,IAAI,GAAG,EAAG,SAAQ,KAAK,MAAM,mBAAmB;AAC1D,WAAO,KAAK,IAAI,GAAG;AAAA,EACrB;AAAA,EAEA,OAAO,cAAuB;AAC5B,WAAO,OAAM,YAAY,SAAS,WAAW;AAAA,EAC/C;AAAA,EAEA,OAAO,UAAU,KAAwB;AACvC,WAAO,OAAM,YAAY,SAAS,GAAG;AAAA,EACvC;AACF;AAEA,IAAM,WAAN,MAAe;AAAA,EACb;AAAA,EACA;AAAA,EAEA,YAAY,KAAa,MAAgB;AACvC,SAAK,MAAM;AACX,SAAK,OAAO;AAAA,EACd;AACF;AAGA,MAAM,kBAAkB;AAKxB,IAAM,QAAQ;AAAA,EACZ,UAAU,oBAAI,IAAI;AAAA,EAElB,YAAY,CAAC;AAAA,EAEb,MAAM,IAAI,QAAQ;AACpB;;;AC9KO,IAAM,SAAN,MAAa;AAAA,EACX;AAAA,EAED,QAAgB;AAAA,EAChB,SAAiB;AAAA,EAExB,YAAY,YAAsC;AACjD,SAAK,aAAa,cAAc,SAAS,cAAc,QAAQ;AAE/D,UAAM,iBAAiB,UAAU,MAAM,KAAK,UAAU;AACtD,SAAK,WAAW;AAAA,EACjB;AAAA,EAEA,aAAa;AACZ,SAAK,WAAW,QAAQ,KAAK,WAAW,sBAAsB,EAAE;AAChE,SAAK,WAAW,SAAS,KAAK,WAAW,sBAAsB,EAAE;AAEjE,SAAK,QAAQ,KAAK,WAAW,sBAAsB,EAAE;AACrD,SAAK,SAAS,KAAK,WAAW,sBAAsB,EAAE;AAAA,EACvD;AACD;;;AChBO,IAAM,eAAN,cAA2B,OAAO;AAAA,EACxC,YAAY,QAAgB;AAC3B,UAAM,OAAO,OAAO,OAAO,MAAM;AAEjC,UAAM,iBAAiB,SAAS,MAAM,KAAK,UAAU;AACrD,UAAM,iBAAiB,aAAa,MAAM,KAAK,SAAS;AAExD,UAAM,iBAAiB,aAAa,MAAM,KAAK,SAAS;AACxD,UAAM,iBAAiB,YAAY,MAAM,MAAO,KAAK,mBAAmB,MAAU;AAClF,UAAM,iBAAiB,eAAe,MAAM,MAAO,KAAK,mBAAmB,MAAU;AAErF,UAAM,iBAAiB,UAAU,MAAM,MAAM;AAC5C,aAAO,WAAW;AAClB,WAAK,SAAS,IAAI,UAAU,OAAO,OAAO,OAAO,MAAM;AACvD,WAAK,oBAAoB;AAAA,IAC1B,CAAC;AAAA,EACF;AAAA;AAAA;AAAA,EAKQ,WAAW,OAAyB;AAC3C,QAAI,CAAC,KAAK,KAAK,UAAW;AAE1B,QAAI,MAAM,SAAS,GAAG;AACrB,WAAK,KAAK,OAAO;AAAA,IAClB,WAAW,MAAM,SAAS,GAAG;AAC5B,WAAK,KAAK,QAAQ;AAAA,IACnB;AAEA,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEQ,UAAU,OAAyB;AAC1C,QAAI,KAAK,aAAc;AAEvB,QAAI,CAAC,MAAM,YAAY,EAAG;AAE1B,SAAK,IAAI,KAAK,MAAM,YAAY,KAAK,KAAK;AAC1C,SAAK,IAAI,KAAK,MAAM,YAAY,KAAK,KAAK;AAE1C,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEQ;AAAA,EACA,UAAU,OAAyB;AAC1C,QAAI,KAAK,aAAc;AAEvB,UAAM,QAAQ,MAAM,QAAQ,CAAC,KAAK,MAAM,eAAe,CAAC;AACxD,UAAM,WAAW,IAAI,QAAQ,MAAM,SAAS,MAAM,OAAO;AAEzD,QAAI,CAAC,KAAK,kBAAkB;AAC3B,WAAK,mBAAmB;AACxB;AAAA,IACD;AAEA,UAAM,OAAO,SAAS,SAAS,KAAK,gBAAgB;AACpD,SAAK,mBAAmB;AAExB,SAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK;AACjC,SAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK;AAEjC,SAAK,oBAAoB;AAAA,EAC1B;AAED;;;ACnEO,IAAM,iBAAN,cAA6B,SAAS;AAAA,EAClC;AAAA,EAEV,YAAY,QAA2B;AACtC,UAAM;AAEN,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,WAAW,MAAe,MAAe,MAAyB;AAAA,EAElE;AAAA,EAEA,aAAa,KAAc,QAAgB,MAAyB;AAAA,EAEpE;AAAA,EAEA,gBAAgB,KAAc,MAAe,MAAyB;AAAA,EAEtE;AACD;;;ACtBO,IAAe,cAAf,MAAkD;AAGzD;;;ACAO,IAAe,aAAf,cAAkC,YAA8C;AAAA,EAEtF,QAA6B,IAAI,oBAAoB,IAAI;AAAA,EACzD,cAAsB;AAAA,EACtB,UAA2B,IAAI,gBAAgB,IAAI;AAAA,EAGnD,eAAwB;AACvB,WAAO;AAAA,EACR;AAAA,EAGA,eAAwB;AACvB,WAAO;AAAA,EACR;AAED;;;ACXO,IAAe,qBAAf,cAA0C,WAAqC;AAAA,EAC7E,WAAqC,oBAAI,IAAI;AAAA,EAErD,UAAU,WAAyB;AAClC,SAAK,SAAS,QAAQ,CAAC,UAAU,QAAQ;AACxC,UAAI,CAAC,MAAM,UAAU,GAAG,EAAG;AAE3B,iBAAW,WAAW,UAAU;AAC/B,gBAAQ,8BAA8B;AAEtC,YAAI,QAAQ,8BAA8B,QAAQ,yBAAyB;AAC1E,kBAAQ,KAAK,KAAK,MAAM,SAAS;AACjC,kBAAQ,8BAA8B,QAAQ;AAAA,QAC/C;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,WAAW,KAAe,MAAgB,0BAAkC,GAAG;AAC9E,QAAI,UAAmB;AAAA,MACtB;AAAA,MACA;AAAA,MACA,4BAA4B;AAAA,IAC7B;AACA,UAAM,OAAO,KAAK,SAAS,IAAI,GAAG,KAAK,CAAC;AACxC,SAAK,KAAK,OAAO;AACjB,SAAK,SAAS,IAAI,KAAK,IAAI;AAAA,EAC5B;AACD;;;ACpCO,IAAM,SAAN,MAAa;AAAA,EAClB;AAAA,EACA;AAAA,EAEA,YAAY,YAAsB,aAAuB;AACvD,QAAI,OAAO,IAAI,KAAK,CAAC,eAAe,WAAW,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAC;AAEzF,SAAK,UAAU,OAAO,IAAI,gBAAgB,IAAI;AAE9C,SAAK,SAAS,IAAI,OAAO,KAAK,SAAS,EAAE,MAAM,SAAS,CAAC;AACzD,SAAK,OAAO,YAAY,CAAC,MAAM,YAAY,CAAC;AAAA,EAC9C;AAAA,EAEA,YAAY,SAAoB;AAC9B,SAAK,OAAO,YAAY,OAAO;AAAA,EACjC;AAAA,EAEA,YAAY;AACV,SAAK,OAAO,UAAU;AACtB,WAAO,IAAI,gBAAgB,KAAK,OAAO;AAAA,EACzC;AACF;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAU;AAAA,CAAV,CAAUE,WAAV;AACC,WAAS,cAAiB,KAAU,OAAkB;AAC5D,UAAM,gBAAiB,QAAQ,IAAI,SAAU,IAAI,UAAU,IAAI;AAC/D,WAAO,IAAI,YAAY;AAAA,EACxB;AAHO,EAAAA,OAAS;AAKT,WAAS,YAAe,KAAa;AAC3C,WAAO,IAAI,EAAE;AAAA,EACd;AAFO,EAAAA,OAAS;AAIT,WAAS,cAAiB,KAAa;AAC7C,UAAM,cAAc,KAAK,MAAM,KAAK,OAAO,IAAI,IAAI,MAAM;AACzD,WAAO,IAAI,WAAW;AAAA,EACvB;AAHO,EAAAA,OAAS;AAKT,WAAS,kBAAqB,KAAU,OAAkB;AAChE,QAAI,QAAQ,KAAK,SAAS,IAAI,OAAQ,OAAM,IAAI,MAAM,GAAG,KAAK,gBAAgB;AAE9E,WAAO,IAAI,OAAO,OAAO,CAAC,EAAE,CAAC;AAAA,EAC9B;AAJO,EAAAA,OAAS;AAMT,WAAS,WAAc,KAAU,MAAwB;AAC/D,QAAI,CAAC,IAAI,SAAS,IAAI,EAAG,QAAO;AAEhC,WAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE,CAAC;AAAA,EAC1C;AAJO,EAAAA,OAAS;AAMT,WAAS,IAAI,KAAuB;AAC1C,WAAO,IAAI,OAAO,CAAC,GAAG,MAAO,KAAK,MAAM,CAAC,IAAI,IAAI,CAAE;AAAA,EACpD;AAFO,EAAAA,OAAS;AAIT,WAAS,QAAW,KAAmB;AAC7C,WAAO,CAAC,OAAO,IAAI,WAAW;AAAA,EAC/B;AAFO,EAAAA,OAAS;AAIT,WAAS,OAAU,KAAe;AACxC,WAAO,CAAC,GAAG,GAAG;AAAA,EACf;AAFO,EAAAA,OAAS;AAIT,WAAS,cAAiB,QAAkB;AAClD,QAAI,YAAiB,CAAC;AACtB,aAAS,OAAO,QAAQ;AACvB,kBAAY,UAAU,OAAO,GAAG;AAAA,IACjC;AACA,WAAO;AAAA,EACR;AANO,EAAAA,OAAS;AAAA,GAvCA;AAgDV,IAAU;AAAA,CAAV,CAAUC,SAAV;AACC,WAAS,OAAaA,MAA2B;AACvD,QAAI,SAAS,oBAAI,IAAU;AAC3B,aAAS,CAAC,KAAK,KAAK,KAAKA,KAAI,QAAQ,GAAG;AACvC,aAAO,IAAI,KAAK,KAAK;AAAA,IACtB;AACA,WAAO;AAAA,EACR;AANO,EAAAA,KAAS;AAAA,GADA;AAUV,IAAU;AAAA,CAAV,CAAUC,YAAV;AACC,WAAS,cAAc,MAAiC;AAC9D,WAAO,gBAAgB,WAAW,KAAK,OAAO,KAAK,YAAY;AAAA,EAChE;AAFO,EAAAA,QAAS;AAGT,WAAS,mBAAmB,MAAiC;AACnE,WAAO,gBAAgB,WACpB,OAAO,eAAe,IAAI,EAAE,OAC5B,OAAO,eAAe,OAAO,eAAe,IAAI,CAAC,EAAE,YAAY;AAAA,EACnE;AAJO,EAAAA,QAAS;AAKT,WAAS,UAAU,MAAmC;AAC5D,WAAO,gBAAgB,WAAW,OAAO,OAAO,eAAe,IAAI,EAAE;AAAA,EACtE;AAFO,EAAAA,QAAS;AAGT,WAAS,eAAe,MAAmC;AAEjE,WAAO,gBAAgB,WACpB,OAAO,eAAe,IAAI,IAC1B,OAAO,eAAe,OAAO,eAAe,IAAI,CAAC,EAAE;AAAA,EACvD;AALO,EAAAA,QAAS;AAMT,WAAS,kBAAkB,MAAmC;AACpE,UAAM,eAAyB,CAAC;AAEhC,QAAI,eAAeA,QAAO,UAAU,IAAI;AACxC,WAAO,aAAa,QAAQ,IAAI;AAC/B,mBAAa,KAAK,aAAa,IAAI;AACnC,qBAAeA,QAAO,eAAe,YAAY;AAAA,IAClD;AACA,WAAO;AAAA,EACR;AATO,EAAAA,QAAS;AAUT,WAAS,eAAe,MAAqC;AACnE,UAAM,eAA2B,CAAC;AAElC,QAAI,eAAeA,QAAO,UAAU,IAAI;AACxC,WAAO,aAAa,QAAQ,IAAI;AAC/B,mBAAa,KAAK,YAAY;AAC9B,qBAAeA,QAAO,eAAe,YAAY;AAAA,IAClD;AAEA,WAAO;AAAA,EACR;AAVO,EAAAA,QAAS;AAWT,WAAS,uBAAuB,MAAmC;AACzE,UAAM,eAAyB,CAAC;AAEhC,QAAI,eAAeA,QAAO,eAAe,IAAI;AAC7C,WAAO,aAAa,QAAQ,IAAI;AAC/B,mBAAa,KAAK,aAAa,IAAI;AACnC,qBAAeA,QAAO,eAAe,YAAY;AAAA,IAClD;AACA,WAAO;AAAA,EACR;AATO,EAAAA,QAAS;AAUT,WAAS,oBAAoB,MAAqC;AACxE,UAAM,eAA2B,CAAC;AAElC,QAAI,eAAeA,QAAO,eAAe,IAAI;AAC7C,WAAO,aAAa,QAAQ,IAAI;AAC/B,mBAAa,KAAK,YAAY;AAC9B,qBAAeA,QAAO,eAAe,YAAY;AAAA,IAClD;AAEA,WAAO;AAAA,EACR;AAVO,EAAAA,QAAS;AAAA,GAjDA;;;ACtDV,IAAMC,QAAO;AAAA,EACnB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;","names":["Util","Util","math","random","trigonometry","convert","percent","vector","Util","HitBox","HitBox","point","Util","Util","HitBox","Util","Util","Collision","Util","Util","Util","listener","array","map","object","Util"]}